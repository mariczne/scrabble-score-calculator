{"version":3,"sources":["modules/calculator/interfaces/index.ts","modules/calculator/settings.ts","modules/calculator/scoreTable.ts","modules/calculator/utilities/error.ts","modules/calculator/utilities/language.ts","modules/calculator/utilities/bonus.ts","modules/calculator/utilities/array.ts","modules/calculator/utilities/multigraph.ts","modules/calculator/index.ts","reducers/wordReducer.ts","context/wordContext.tsx","actions/wordActions.ts","components/LangSelect.tsx","components/WordInput.tsx","components/Tile/Tile.tsx","components/Tile/LetterTile.tsx","components/Tile/BonusTile.tsx","components/Tile/BingoTile.tsx","components/LetterTiles.tsx","components/WordScore.tsx","components/BonusTiles.tsx","components/Instructions.tsx","components/Footer.tsx","components/App.tsx","serviceWorker.ts","index.tsx"],"names":["BonusType","WORD_SCORE_MULTIPLIERS","name","multiplier","MAX_WORD_SCORE_MULTIPLIER","reduce","max","current","SETTINGS","MAX_TILE_SCORE_MULTIPLIER","POINTS_FOR_BINGO","MIN_TILES_FOR_BINGO","SCORE_TABLE","deu","displayName","scores","0","1","2","3","4","6","8","10","gwi","multigraphs","5","7","9","eng","spa","fra","ita","hun","pol","por","rus","ukr","checkIsBonusDefined","isBonusDefined","RangeError","checkIsBingoAllowed","input","languageCode","minTilesForBingo","isBingoAllowed","Error","checkIsLanguageDefined","scoreTable","hasOwnProperty","isLanguageDefined","wordScoreMultipliers","some","bonus","getTilesInWord","length","findIndexOfSubarray","arr","subArr","i","every","element","j","joinAllSubarraysIntoSingleElements","subArrIndexAt","slice","join","joinSubarrayIntoSingleElement","isLanguageWithMultigraphs","getMultigraphsInLanguage","sort","prev","curr","getWordScore","bonuses","isBingoUsed","checkAreAllBonusesAllowed","tileBonuses","filter","type","Tile","getTileBonuses","wordBonuses","Word","getWordBonuses","pointsForBingo","getTileMultiplier","index","find","tile","map","getTileScore","acc","totalMultiplier","getWordMultiplier","Number","Object","keys","key","includes","toUpperCase","letters","Array","from","multigraph","joinMultigraphsInTiles","wordReducer","state","action","payload","language","tileIndex","initialState","WordContext","createContext","WordContextProvider","children","useReducer","dispatch","Provider","value","BINGO_NAME","languages","getSupportedLanguages","LangSelect","useContext","Select","onChange","e","target","data-testid","styled","select","WordInput","Input","placeholder","WordReset","onClick","button","div","LetterTile","character","score","cycleLetterBonus","isBlankTile","isScoreInvalid","isNaN","StyledLetterTile","bonusType","onKeyDown","tabIndex","Character","Score","props","css","span","BonusTile","StyledBonusTile","BonusName","BingoTile","bingoName","textWhenBingoUsed","toggleBingo","StyledBingoTile","allowed","BingoName","TextWhenUsed","LetterTiles","tiles","getTileScoreMultiplier","getTileBonus","tileBonus","cycleTileBonus","WordScore","StyledWordScore","BonusTiles","wordBonusTypes","getWordBonusTypes","isGameUsingBingo","Instructions","href","Footer","StyledFooter","footer","App","StyledApp","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"iNAmCYA,E,uDCtBCC,EAAyB,CACpC,CAAEC,KAAM,SAAUC,WAAY,GAC9B,CAAED,KAAM,SAAUC,WAAY,IAGnBC,EAA4BH,EAAuBI,QAC9D,SAACC,EAAKC,GACJ,OAAIA,EAAQJ,WAAaG,EACTC,EAAQJ,WAEjBG,IAET,GAWaE,EARY,CACzBC,0BAnBuC,EAoBvCC,iBAnB8B,GAoB9BC,oBAnBiC,EAoBjCV,yBACAG,6BCoLaQ,EAnNiB,CAC9BC,IAAK,CACHC,YAAa,UACbC,OAAQ,CACNC,EAAG,CAAC,KACJC,EAAG,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC5CC,EAAG,CAAC,IAAK,IAAK,IAAK,KACnBC,EAAG,CAAC,IAAK,IAAK,IAAK,KACnBC,EAAG,CAAC,IAAK,IAAK,IAAK,KACnBC,EAAG,CAAC,OAAK,IAAK,OAAK,KACnBC,EAAG,CAAC,OAAK,KACTC,GAAI,CAAC,IAAK,OAGdC,IAAK,CACHV,YAAa,wBACbW,YAAa,CACX,CAAC,IAAK,IAAK,KACX,CAAC,IAAK,SAAK,UACX,CAAC,IAAK,IAAK,KACX,CAAC,IAAK,IAAK,KACX,CAAC,IAAK,IAAK,KACX,CAAC,IAAK,IAAK,KACX,CAAC,IAAK,IAAK,KACX,CAAC,IAAK,KACN,CAAC,IAAK,KACN,CAAC,IAAK,KACN,CAAC,SAAK,UACN,CAAC,IAAK,KACN,CAAC,SAAK,UACN,CAAC,SAAK,UACN,CAAC,IAAK,KACN,CAAC,SAAK,UACN,CAAC,IAAK,KACN,CAAC,IAAK,KACN,CAAC,SAAK,UACN,CAAC,IAAK,KACN,CAAC,IAAK,KACN,CAAC,IAAK,KACN,CAAC,IAAK,KACN,CAAC,IAAK,KACN,CAAC,IAAK,KACN,CAAC,IAAK,UACN,CAAC,IAAK,KACN,CAAC,IAAK,KACN,CAAC,IAAK,KACN,CAAC,IAAK,KACN,CAAC,IAAK,KACN,CAAC,IAAK,MAERV,OAAQ,CACNC,EAAG,CAAC,KACJC,EAAG,CAAC,SAAK,IAAK,IAAK,IAAK,IAAK,IAAK,SAAK,IAAK,SAAK,SAAK,IAAK,SAAK,IAAK,UACrEC,EAAG,CACD,KACA,KACA,KACA,eACA,KACA,eACA,eACA,KACA,eACA,KACA,KACA,gBAEFC,EAAG,CAAC,MAAO,gBAAO,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAAO,KACvDC,EAAG,CAAC,KAAM,IAAK,SAAK,KAAM,KAAM,KAAM,KAAM,MAC5CM,EAAG,CAAC,IAAK,UAAM,IAAK,KACpBL,EAAG,CAAC,KAAM,KAAM,KAAM,MACtBM,EAAG,CAAC,KAAM,MAAO,MAAO,OACxBL,EAAG,CAAC,MACJM,EAAG,CAAC,OACJL,GAAI,CAAC,IAAK,IAAK,OAGnBM,IAAK,CACHf,YAAa,UACbC,OAAQ,CACNC,EAAG,CAAC,KACJC,EAAG,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACjDC,EAAG,CAAC,IAAK,KACTC,EAAG,CAAC,IAAK,IAAK,IAAK,KACnBC,EAAG,CAAC,IAAK,IAAK,IAAK,IAAK,KACxBM,EAAG,CAAC,KACJJ,EAAG,CAAC,IAAK,KACTC,GAAI,CAAC,IAAK,OAGdO,IAAK,CACHhB,YAAa,aACbW,YAAa,CACX,CAAC,IAAK,KACN,CAAC,IAAK,KACN,CAAC,IAAK,MAERV,OAAQ,CACNC,EAAG,CAAC,KACJC,EAAG,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACjDC,EAAG,CAAC,IAAK,KACTC,EAAG,CAAC,IAAK,IAAK,IAAK,KACnBC,EAAG,CAAC,IAAK,IAAK,IAAK,KACnBM,EAAG,CAAC,KAAM,KACVJ,EAAG,CAAC,IAAK,KAAM,OAAK,KAAM,KAC1BC,GAAI,CAAC,OAGTQ,IAAK,CACHjB,YAAa,cACbC,OAAQ,CACNC,EAAG,CAAC,KACJC,EAAG,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACjDC,EAAG,CAAC,IAAK,IAAK,KACdC,EAAG,CAAC,IAAK,IAAK,KACdC,EAAG,CAAC,IAAK,IAAK,KACdE,EAAG,CAAC,IAAK,KACTC,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,OAG7BS,IAAK,CACHlB,YAAa,WACbC,OAAQ,CACNC,EAAG,CAAC,KACJC,EAAG,CAAC,IAAK,IAAK,IAAK,KACnBC,EAAG,CAAC,IAAK,IAAK,IAAK,KACnBC,EAAG,CAAC,IAAK,IAAK,IAAK,KACnBO,EAAG,CAAC,IAAK,IAAK,IAAK,IAAK,KACxBJ,EAAG,CAAC,IAAK,IAAK,KACdC,GAAI,CAAC,OAGTU,IAAK,CACHnB,YAAa,SACbW,YAAa,CACX,CAAC,IAAK,KACN,CAAC,IAAK,KACN,CAAC,IAAK,KACN,CAAC,IAAK,KACN,CAAC,IAAK,KACN,CAAC,IAAK,KACN,CAAC,IAAK,MAERV,OAAQ,CACNC,EAAG,CAAC,KACJC,EAAG,CAAC,IAAK,IAAK,IAAK,IAAK,OAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC3DC,EAAG,CAAC,IAAK,IAAK,IAAK,QACnBC,EAAG,CAAC,OAAK,IAAK,KAAM,KACpBC,EAAG,CAAC,IAAK,KAAM,IAAK,OAAK,IAAK,IAAK,OAAK,KACxCM,EAAG,CAAC,IAAK,OAAK,MACdC,EAAG,CAAC,KAAM,SAAK,OAAK,UACpBL,EAAG,CAAC,KAAM,MACVC,GAAI,CAAC,QAGTW,IAAK,CACHpB,YAAa,SACbC,OAAQ,CACNC,EAAG,CAAC,KACJC,EAAG,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC5CC,EAAG,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACvCC,EAAG,CAAC,IAAK,IAAK,IAAK,IAAK,SAAK,KAC7BO,EAAG,CAAC,SAAK,SAAK,IAAK,OAAK,SAAK,UAC7BL,EAAG,CAAC,UACJM,EAAG,CAAC,UACJC,EAAG,CAAC,YAGRO,IAAK,CACHrB,YAAa,eACbC,OAAQ,CACNC,EAAG,CAAC,KACJC,EAAG,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC5CC,EAAG,CAAC,IAAK,IAAK,IAAK,KACnBC,EAAG,CAAC,IAAK,IAAK,QACdC,EAAG,CAAC,IAAK,IAAK,IAAK,KACnBM,EAAG,CAAC,KACJL,EAAG,CAAC,KACJC,EAAG,CAAC,IAAK,OAGbc,IAAK,CACHtB,YAAa,6CACbC,OAAQ,CACNC,EAAG,CAAC,KACJC,EAAG,CAAC,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,UAC5CC,EAAG,CAAC,SAAK,SAAK,SAAK,SAAK,SAAK,UAC7BC,EAAG,CAAC,SAAK,SAAK,SAAK,SAAK,UACxBC,EAAG,CAAC,SAAK,UACTM,EAAG,CAAC,SAAK,SAAK,SAAK,SAAK,UACxBJ,EAAG,CAAC,SAAK,SAAK,UACdC,GAAI,CAAC,SAAK,SAAK,YAGnBc,IAAK,CACHvB,YAAa,+DACbC,OAAQ,CACNC,EAAG,CAAC,KACJC,EAAG,CAAC,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,UAC5CC,EAAG,CAAC,SAAK,SAAK,SAAK,SAAK,SAAK,UAC7BC,EAAG,CAAC,UACJC,EAAG,CAAC,SAAK,SAAK,SAAK,UACnBM,EAAG,CAAC,SAAK,SAAK,SAAK,UACnBL,EAAG,CAAC,SAAK,SAAK,SAAK,UACnBM,EAAG,CAAC,UACJL,EAAG,CAAC,SAAK,SAAK,UACdC,GAAI,CAAC,SAAK,QC1MT,SAASe,EAAoBnC,GAClC,IAAKoC,EAAepC,GAClB,MAAM,IAAIqC,WAAJ,aAAqBrC,EAArB,iCAwBH,SAASsC,EACdC,EACAC,GAEO,IADPC,EACM,uDFxB2B,EEyBjC,IAAKC,EAAeH,EAAOC,EAAcC,GACvC,MAAM,IAAIE,MAIP,SAASC,EACdC,EACAL,GAEA,IC3CK,WAGK,IAFVK,EAES,uDAFgBpC,EACzB+B,EACS,uCACT,OAAOK,EAAWC,eAAeN,GDuC5BO,CAAkBF,EAAYL,GACjC,MAAM,IAAIH,WAAW,yB,SHZbxC,K,YAAAA,E,aAAAA,M,KKCL,IAAMuC,EAAiB,SAC5BpC,GAEa,IADbgD,EACY,uDADyBlD,EAErC,OAAOkD,EAAqBC,MAAK,SAACC,GAAD,OAAWA,EAAMlD,aAAeA,MAUtD0C,EAAiB,SAC5BH,EACAC,GAEa,IADbC,EACY,uDJ1CqB,EI2CjC,OAAOU,EAAeZ,EAAO,CAAEC,iBAAgBY,QAAUX,G,OCjDpD,SAASY,EAAuBC,EAAUC,GAC/C,IADqE,IAAD,WAC3DC,GACP,GAAID,EAAOE,OAAM,SAACC,EAASC,GAAV,OAAgBD,IAAYJ,EAAIE,EAAIG,MACnD,MAAM,CAAN,EAAOH,IAFFA,EAAI,EAAGA,EAASF,EAAIF,OAASG,EAAOH,OAAzB,IAAoCI,EAAG,CAAC,IAAD,IAAlDA,GAAkD,kCAK3D,OAAQ,EAeH,SAASI,EACdN,EACAC,GAGA,OAAuB,IADDF,EAAoBC,EAAKC,GAEtC,YAAID,GAENM,EApBF,SAA0CN,EAAUC,GACzD,IAAMM,EAAgBR,EAAoBC,EAAKC,GAC/C,OAAuB,IAAnBM,EACI,GAAN,mBACKP,EAAIQ,MAAM,EAAGD,IADlB,CAEEN,EAAOQ,KAAK,KAFd,YAGKT,EAAIQ,MAAMD,EAAgBN,EAAOH,OAAQE,EAAIF,UAG7C,YAAIE,GAYTU,CAA8BV,EAAKC,GACnCA,GC9BG,SAASU,EACdpB,EACAL,GAGA,OADAI,EAAuBC,EAAYL,GAC5BK,EAAWL,GAAcM,eAAe,eAG1C,SAASoB,EACdrB,EACAL,GAEA,OAAIyB,EAA0BpB,EAAYL,IDlB1Cc,ECmBqCT,EAAWL,GAAclB,YDjBvD,YAAIgC,GAAKa,MAAK,SAACC,EAAMC,GAAP,OAAgBA,EAAKjB,OAASgB,EAAKhB,WCmBjD,GDtBF,IACLE,EEwBK,SAASgB,EACd/B,EADK,GAQI,IALPC,EAKM,EALNA,aAKM,IAJNK,kBAIM,MAJOpC,EAIP,MAHN8D,eAGM,MAHI,GAGJ,MAFNC,mBAEM,SACJA,GAAalC,EAAoBC,EAAOC,GAC5CI,EAAuBC,EAAYL,GLb9B,SACLD,EACAC,EACA+B,GAEA,GAAIA,EAAQnB,OAASD,EAAeZ,EAAO,CAAEC,iBAAgBY,OAC3D,MAAM,IAAIT,MKQZ8B,CAA0BlC,EAAOC,EAAc+B,GAE/C,IAAMG,EH3BD,SAAwBH,GAC7B,OAAOA,EAAQI,QACb,SAACzB,GAAD,OAAWA,EAAM0B,OAAS/E,EAAUgF,QGyBLC,CAAeP,GAC1CQ,EHtBD,SAAwBR,GAC7B,OAAOA,EAAQI,QACb,SAACzB,GAAD,OAAWA,EAAM0B,OAAS/E,EAAUmF,QGoBLC,CAAeV,GAC1CW,EAAiBV,EP7BO,GO6B0B,EAExD,SAASW,EAAkBC,GAAwB,IAAD,EAChD,OAAO,UAAAV,EAAYW,MAAK,SAACC,GAAD,OAAUA,EAAKF,QAAUA,YAA1C,eAAkDpF,aAAc,EAKzE,OAAOmD,EAAeZ,EAAO,CAAEM,aAAYL,iBACtC+C,KAAI,SAACD,EAAMF,GAAP,OACHI,EAAaF,EAAM,CAAE9C,eAAcxC,WAAYmF,EAAkBC,QAElElF,QAAO,SAACuF,EAAKpB,GAAN,OAAeoB,EAAMpB,IAAM,GH7BlC,WAAmE,IAAxCU,EAAuC,uDAAZ,GAC3D,OAAOA,EAAY7E,QAAO,SAACwF,EAAiBxC,GAE1C,OADAf,EAAoBe,EAAMlD,YACnB0F,EAAkBxC,EAAMlD,aAC9B,GGyByC2F,CAAkBZ,GAAeG,EAGxE,SAASM,EACdjD,EADK,GAGI,IADPC,EACM,EADNA,aACM,IADQK,kBACR,MADqBpC,EACrB,MADkCT,kBAClC,MAD+C,EAC/C,EASR,OARA4C,EAAuBC,EAAYL,GAErBoD,OACZC,OAAOC,KAAKjD,EAAWL,GAAc5B,QAAQyE,MAAK,SAACU,GAAD,OAChDlD,EAAWL,GAAc5B,OAAOmF,GAAKC,SAASzD,EAAM0D,mBAIzCjG,EAGV,SAASmD,EACdZ,EADK,GAGM,IADTC,EACQ,EADRA,aACQ,IADMK,kBACN,MADmBpC,EACnB,EACVmC,EAAuBC,EAAYL,GAEnC,IAAM0D,EAAUC,MAAMC,KAAK7D,EAAM0D,eAEjC,OAAIhC,EAA0BpB,EAAYL,GDrDrC,SACL0D,EACA5E,GAEA,OAAOA,EAAYpB,QACjB,SAACgG,EAASG,GAAV,OACazC,EAAmCsC,EAASG,KACzDH,GC+COI,CACLJ,EACAhC,EAAyBrB,EAAYL,IAIlC0D,EAaM,I,OC/EA,SAASK,EAAYC,EAAcC,GAChD,OAAQA,EAAO7B,MACb,IAAK,gBAAkB,IAAD,EAGhB6B,EADFC,QAAWnE,EAFO,EAEPA,MAAOE,EAFA,EAEAA,iBAGZ8B,EAAyBiC,EAAzBjC,QAASC,EAAgBgC,EAAhBhC,YAEjB,OAAO,2BACFgC,GADL,IAEEjE,QACAgC,QAASA,EAAQI,QAAO,SAACzB,GAAD,OAAWA,EAAMkC,MAAQ7C,EAAMa,UACvDoB,YAAajC,EAAMa,QAAUX,GAAmB+B,IAGpD,IAAK,mBAAqB,IAEXmC,EACTF,EADFC,QAAWC,SAGb,OAAO,2BAAKH,GAAZ,IAAmBG,aAErB,IAAK,wBAA0B,IAEhBC,EACTH,EADFC,QAAWE,UAGb,OAAO,2BACFJ,GADL,IAEEjC,QAAQ,GAAD,mBACFiC,EAAMjC,SADJ,CAEL,CAAEK,KAAM/E,EAAUgF,KAAMO,MAAOwB,EAAW5G,WAAY,OAI5D,IAAK,8BAAgC,IAEtB4G,EACTH,EADFC,QAAWE,UAGb,OAAO,2BACFJ,GADL,IAEEjC,QAASiC,EAAMjC,QAAQgB,KAAI,SAACD,GAC1B,OAAIA,EAAKF,QAAUwB,EACV,2BAAKtB,GAAZ,IAAkBtF,WAAYsF,EAAKtF,WAAa,IAE3CsF,OAIb,IAAK,wBAA0B,IAEhBsB,EACTH,EADFC,QAAWE,UAGb,OAAO,2BACFJ,GADL,IAEEjC,QAASiC,EAAMjC,QAAQgB,KAAI,SAACD,GAC1B,OAAIA,EAAKF,QAAUwB,EACV,2BAAKtB,GAAZ,IAAkBV,KAAM/E,EAAUmF,KAAMhF,WAAY,IAE/CsF,OAIb,IAAK,8BAAgC,IAEtBsB,EACTH,EADFC,QAAWE,UAGb,OAAO,2BACFJ,GADL,IAEEjC,QAASiC,EAAMjC,QAAQgB,KAAI,SAACD,GAC1B,OAAIA,EAAKF,QAAUwB,EACV,2BAAKtB,GAAZ,IAAkBtF,WAAYsF,EAAKtF,WAAa,IAE3CsF,OAIb,IAAK,0BAA4B,IAElBsB,EACTH,EADFC,QAAWE,UAGb,OAAO,2BACFJ,GADL,IAEEjC,QAASiC,EAAMjC,QAAQI,QAAO,SAACW,GAAD,OAAUA,EAAKF,QAAUwB,OAG3D,IAAK,gBACH,OAAO,2BAAKJ,GAAZ,IAAmBhC,aAAcgC,EAAMhC,cAEzC,IAAK,aACH,OAAO,2BACFgC,GADL,IAEEjE,MAAO,GACPgC,QAAS,GACTC,aAAa,IAGjB,QACE,OAAOgC,GCtHb,IAEMK,EAAsB,CAC1BtE,MAAO,GACPoE,SAAU,MACVpC,QAAS,GACTC,aAAa,GAGFsC,EAAcC,wBAAmBF,GAEjCG,EAAgC,YAAyB,IAAbC,EAAY,EAAZA,SAAY,EACzCC,qBAAWX,EAAaM,GADiB,mBAC5DL,EAD4D,KACrDW,EADqD,KAEnE,OACE,kBAACL,EAAYM,SAAb,CACEC,MAAO,CAAEd,YAAa,CAACC,EAAOW,GAAW9G,WAAUiH,WAftC,UAiBZL,IChBL3G,EAGED,EAHFC,0BACAL,EAEEI,EAFFJ,0BACAO,EACEH,EADFG,oB,0SCDF,IAAM+G,ERIC,WAEQ,IADb1E,EACY,uDADapC,EAEzB,OAAO0F,MAAMC,KAAKP,OAAOC,KAAKjD,IAAa0C,KAAI,SAAC/C,GAAD,MAAmB,CAChEA,eACA7B,YAAakC,EAAWL,GAAc7B,gBQTxB6G,GAEH,SAASC,IAAc,IAAD,EAG/BC,qBAAWZ,GAHoB,gBAEjCP,YAFiC,GAEnBC,EAFmB,KAEZW,EAFY,KAKnC,OACE,gDAEE,kBAACQ,EAAD,CACEN,MAAOb,EAAMG,SACbiB,SAAU,SAACC,GAAD,OAAOV,EDUhB,CAAEvC,KAAM,mBAAoB8B,QAAS,CAAEC,SCVCkB,EAAEC,OAAOT,UAClDU,cAAY,eAEXR,EAAUhC,KAAI,gBAAG/C,EAAH,EAAGA,aAAc7B,EAAjB,EAAiBA,YAAjB,OACb,4BAAQoF,IAAKvD,EAAc6E,MAAO7E,GAC/B7B,QAQb,IAAMgH,EAASK,IAAOC,OAAV,K,gnBC1BG,SAASC,IAAa,IAAD,EAG9BR,qBAAWZ,GAHmB,gBAEhCP,YAFgC,GAElBC,EAFkB,KAEXW,EAFW,KAKlC,OACE,oCACE,kBAACgB,EAAD,CACEvD,KAAK,OACLyC,MAAOb,EAAMjE,MACbqF,SAAU,SAACC,GAAD,OAAOV,EFChB,CACLvC,KAAM,gBACN8B,QAAS,CAAEnE,MEH4BsF,EAAEC,OAAOT,MFG9B5E,iBAAkBjC,MEFhCuH,cAAY,aACZK,YAAY,yBAEb5B,EAAMjE,OACL,kBAAC8F,EAAD,CAAWC,QAAS,kBAAMnB,EAAS,CAAEvC,KAAM,iBAA3C,UAQR,IAAMuD,EAAQH,IAAOzF,MAAV,KAcL8F,EAAYL,IAAOO,OAAV,K,kqBCxCf,IAqCe1D,EArCFmD,IAAOQ,IAAV,K,+zCCGK,SAASC,GAAT,GAMM,IAAD,IALlBrD,aAKkB,MALV,EAKU,MAJlBsD,iBAIkB,MAJN,IAIM,MAHlBC,aAGkB,MAHV,EAGU,EAFlBzF,EAEkB,EAFlBA,MACA0F,EACkB,EADlBA,iBAEMC,EAA4B,MAAdH,EACdI,EAAiBlD,OAAOmD,MAAMJ,GAQpC,OACE,kBAACK,GAAD,CACEF,eAAgBA,EAChBG,UAAW/F,EAAM0B,KACjB5E,WAAYkD,EAAMlD,WAClBsI,QAAS,kBAAMM,EAAiBxD,IAChC8D,UAAW,SAACrB,GAAD,MAAkB,UAAVA,EAAE9B,IAAkB6C,EAAiBxD,GAAS,MACjE+D,SAAU,GAEV,kBAACC,GAAD,CAAW/C,WAAYqC,EAAUtF,OAAS,GAAKsF,EAAUtF,QACtDsF,EAAUzC,eAEb,kBAACoD,GAAD,KAjBER,EAAoB,KACpBC,EAAuB,IACpBH,IA0BX,IAAMK,GAAmBhB,YAAOnD,EAAPmD,CAAH,MAIlB,SAACsB,GAAD,OACAA,EAAMR,gBACNS,YADA,SAMA,SAACD,GACD,GAAIA,EAAML,YAAcpJ,EAAUgF,KAAM,CACtC,GAAyB,IAArByE,EAAMtJ,WACR,OAAOuJ,YAAP,MAGK,GAAyB,IAArBD,EAAMtJ,WACf,OAAOuJ,YAAP,KAMJ,GAAID,EAAML,YAAcpJ,EAAUmF,KAAM,CACtC,GAAyB,IAArBsE,EAAMtJ,WACR,OAAOuJ,YAAP,KAGK,GAAyB,IAArBD,EAAMtJ,WACf,OAAOuJ,YAAP,SAoBFH,GAAYpB,IAAOwB,KAAV,KAOX,SAACF,GACD,OAAyB,IAArBA,EAAMjD,WACDkD,YAAP,KAKuB,IAArBD,EAAMjD,WACDkD,YAAP,UADF,KAQEF,GAAQrB,IAAOwB,KAAV,K,2xBChHI,SAASC,GAAT,GAAoD,IAA/B7E,EAA8B,EAA9BA,KAAM7E,EAAwB,EAAxBA,KACxC,OACE,kBAAC2J,GAAD,CAAiB9E,KAAMA,EAAM7E,KAAMA,GACjC,kBAAC4J,GAAD,eAAe5J,EAAf,YAAuB6E,EAAvB,YAUN,IAAM8E,GAAkB1B,YAAOnD,EAAPmD,CAAH,MAGjB,SAACsB,GACD,GAAmB,WAAfA,EAAM1E,KAAmB,CAC3B,GAAmB,WAAf0E,EAAMvJ,KACR,OAAOwJ,YAAP,MAGK,GAAmB,WAAfD,EAAMvJ,KACf,OAAOwJ,YAAP,MAMJ,GAAmB,SAAfD,EAAM1E,KAAiB,CACzB,GAAmB,WAAf0E,EAAMvJ,KACR,OAAOwJ,YAAP,MAGK,GAAmB,WAAfD,EAAMvJ,KACf,OAAOwJ,YAAP,UAaFI,GAAY3B,IAAOwB,KAAV,M,kiBChDA,SAASI,GAAT,GAMK,IAAD,IALjBC,iBAKiB,MALL,QAKK,MAJjBnH,sBAIiB,aAHjB8B,mBAGiB,aAFjBsF,yBAEiB,MAFG,SAEH,EADjBC,EACiB,EADjBA,YAEA,OACE,kBAACC,GAAD,CACEC,QAASvH,EACT4F,QAASyB,EACTb,UAAW,SAACrB,GAAD,MAAkB,UAAVA,EAAE9B,IAAkBgE,IAAgB,MACvDZ,SAAU,GAEV,kBAACe,GAAD,KAAYL,GACXrF,GAAe,kBAAC2F,GAAD,KAAeL,IASrC,IAAME,GAAkBhC,YAAOnD,EAAPmD,CAAH,MACC,SAACsB,GAAD,OAAYA,EAAMW,QAAU,SAAW,eACjD,SAACX,GAAD,OAAYA,EAAMW,QAAU,UAAY,aAW9CC,GAAYlC,IAAOwB,KAAV,MAUTW,GAAenC,IAAOwB,KAAV,MC5CH,SAASY,KAAe,IAAD,EAGhC1C,qBAAWZ,GAHqB,gBAElCP,YAFkC,GAEpBC,EAFoB,KAEbW,EAFa,KAI9BkD,EAAQlH,EAAeqD,EAAMjE,MAAO,CAAEC,aAAcgE,EAAMG,WAEhE,SAAS2D,EAAuBlF,GAAgB,IAAD,IAC7C,2BACEoB,EAAMjC,QAAQc,MACZ,SAACnC,GAAD,OAAkBA,EAAMkC,QAAUA,GAASlC,EAAM0B,OAAS/E,EAAUgF,eAFxE,aACE,EAEG7E,kBAHL,QAGmB,EAIrB,SAASuK,EAAanF,GACpB,IAAMlC,EAAQsD,EAAMjC,QAAQc,MAAK,SAACnC,GAAD,OAAkBA,EAAMkC,QAAUA,KACnE,OAAIlC,GACG,CAAEkC,QAAOR,KAAM,OAAQ5E,WAAY,GAG5C,OACE,6BACGqK,EAAM9E,KAAI,SAACD,EAAMF,GAAP,OACT,kBAACqD,GAAD,CACE1C,IAAKX,EACLA,MAAOA,EACPsD,UAAWpD,EACXqD,MAAOnD,EAAaF,EAAM,CACxB9C,aAAcgE,EAAMG,SACpB3G,WAAYsK,EAAuBlF,KAErClC,MAAOqH,EAAanF,GACpBwD,iBAAkB,kBAAMzB,EPQ3B,SACLX,EACAI,GAEA,IAAM4D,EAAYhE,EAAMjC,QAAQc,MAAK,SAACC,GAAD,OAAUA,EAAKF,QAAUwB,KAC9D,OAAI4D,EACEA,EAAU5F,OAAS/E,EAAUgF,KAC3B2F,EAAUxK,aAAeM,EACpB,CAAEsE,KAAM,wBAAyB8B,QAAS,CAAEE,cAE9C,CAAEhC,KAAM,8BAA+B8B,QAAS,CAAEE,cAChD4D,EAAU5F,OAAS/E,EAAUmF,KAClCwF,EAAUxK,aAAeC,EACpB,CAAE2E,KAAM,0BAA2B8B,QAAS,CAAEE,cAEhD,CAAEhC,KAAM,8BAA+B8B,QAAS,CAAEE,cAEpD,CAAEhC,KAAM,oBAEV,CAAEA,KAAM,wBAAyB8B,QAAS,CAAEE,cO3BV6D,CAAejE,EAAOpB,W,+FChClD,SAASsF,KAAa,IAAD,EAG9BhD,qBAAWZ,GADCN,EAFkB,cAEhCD,YAFgC,MAK5BoC,EAAQrE,EAAakC,EAAMjE,MAAO,CACtCC,aAAcgE,EAAMG,SACpBpC,QAASiC,EAAMjC,QACfC,YAAagC,EAAMhC,cAGfsE,EAAiBlD,OAAOmD,MAAMJ,GAEpC,OACE,kBAACgC,GAAD,mBACc,IACX7B,EAlBoB,4BAqBnB,0BAAMf,cAAY,oBAAoBY,IAM9C,IAAMgC,GAAkB3C,IAAOwB,KAAV,MC1BN,SAASoB,KACtB,IAAMC,EfuBD,WAEM,IADX7H,EACU,uDAD2BlD,EAErC,OAAOkD,EAAqBuC,KAAI,SAACrC,GAAD,OAAWA,EAAMnD,Qe1B1B+K,GAAoBvF,KAAI,SAACrC,GAAD,MAAY,CACzDnD,KAAMmD,EACN0B,KAAM,WAH2B,EAe/B8C,qBAAWZ,GAfoB,gBAYjCP,YAZiC,GAYnBC,EAZmB,KAYZW,EAZY,KAarB5G,EAbqB,EAajCF,SAAYE,iBACZ+G,EAdiC,EAcjCA,WAGIyD,EAAmBxK,EAAmB,EAE5C,OACE,oCACGwK,GACC,kBAACnB,GAAD,CACE7D,IAAKuB,EACLuC,UAAWvC,EACXyC,YAAa,kBAAM5C,ETsCtB,SAAqBX,GAC1B,IAEE,OADAlE,EAAoBkE,EAAMjE,MAAOiE,EAAMG,UAChC,CAAE/B,KAAM,iBACf,SACA,MAAO,CAAEA,KAAM,qBS3CmBmF,CAAYvD,KACxC9D,eAAgBA,EAAe8D,EAAMjE,MAAOiE,EAAMG,UAClDnC,YAAagC,EAAMhC,YACnBsF,kBAAkB,WAtBD,CACvB,CAAE/J,KAAM,SAAU6E,KAAM,UACxB,CAAE7E,KAAM,SAAU6E,KAAM,WAuBJW,KAAI,SAACrC,GAAD,OACpB,kBAACuG,GAAD,CACE1D,IAAG,iBAAY7C,EAAMnD,MACrB6E,KAAM1B,EAAM0B,KACZ7E,KAAMmD,EAAMnD,UAGf8K,EAAetF,KAAI,SAACrC,GAAD,OAClB,kBAACuG,GAAD,CACE1D,IAAG,eAAU7C,EAAMnD,MACnB6E,KAAM1B,EAAM0B,KACZ7E,KAAMmD,EAAMnD,WC5CP,SAASiL,KAAgB,IAAD,EAIjCtD,qBAAWZ,GAJsB,IAEnCzG,SAAYE,EAFuB,EAEvBA,iBAAkBC,EAFK,EAELA,oBAC9B8G,EAHmC,EAGnCA,WAEIyD,EAAmBxK,EAAmB,EAE5C,OACE,oCACE,gDACA,kBAACqK,GAAD,MACA,iEACA,gFACCG,GACC,2BACGzD,EADH,4CACwD,IACrD9G,EAFH,eAKF,gGACA,2BACE,uBAAGyK,KAAK,kDAAR,4B,iGCtBO,SAASC,KACtB,OACE,kBAACC,GAAD,mKAQJ,IAAMA,GAAenD,IAAOoD,OAAV,M,0YCFH,SAASC,KACtB,OACE,kBAACC,GAAD,KACE,kBAAC,EAAD,KACE,kBAAC7D,EAAD,MACA,kBAACS,EAAD,MACA,kBAACkC,GAAD,MACA,kBAACM,GAAD,MACA,kBAACM,GAAD,MACA,kBAACE,GAAD,QAMR,IAAMI,GAAYtD,IAAOQ,IAAV,MCdK+C,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAACR,GAAD,MAASS,SAASC,eAAe,SDkI3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAACC,GACLA,EAAaC,gBAEdC,OAAM,SAACC,GACNC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.f3bbc846.chunk.js","sourcesContent":["export interface WordScoreOptions {\n  languageCode: string;\n  scoreTable?: ScoreTable;\n  bonuses?: Bonus[];\n  isBingoUsed?: boolean;\n}\n\nexport interface TileScoreOptions {\n  languageCode: string;\n  scoreTable?: ScoreTable;\n  multiplier?: number;\n}\n\nexport interface TilesInWordOptions {\n  languageCode: string;\n  scoreTable?: ScoreTable;\n}\n\nexport type Multigraph = string[];\n\nexport interface ScoreTable {\n  [languageCode: string]: {\n    displayName: string;\n    scores: {\n      [pointValue: string]: string[];\n    };\n    multigraphs?: Multigraph[];\n  };\n}\n\nexport interface Multiplier {\n  name: string;\n  multiplier: number;\n}\n\nexport enum BonusType {\n  Tile = \"tile\",\n  Word = \"word\",\n}\n\nexport interface Bonus {\n  type: BonusType;\n  index: number;\n  multiplier: number;\n}\n\nexport interface WordBonus {\n  type: BonusType.Word;\n  index: number;\n  multiplier: number;\n}\n\nexport interface TileBonus {\n  type: BonusType.Tile;\n  index: number;\n  multiplier: number;\n}\n\nexport interface Language {\n  languageCode: string;\n  displayName: string;\n}\n","import { Multiplier } from \"./interfaces\";\n\ninterface Settings {\n  MAX_TILE_SCORE_MULTIPLIER: number;\n  POINTS_FOR_BINGO: number;\n  MIN_TILES_FOR_BINGO: number;\n  WORD_SCORE_MULTIPLIERS: Multiplier[];\n  MAX_WORD_SCORE_MULTIPLIER: number;\n}\n\nexport const MAX_TILE_SCORE_MULTIPLIER = 3;\nexport const POINTS_FOR_BINGO = 50; // 0 disables bingo completely\nexport const MIN_TILES_FOR_BINGO = 7;\nexport const WORD_SCORE_MULTIPLIERS = [\n  { name: \"double\", multiplier: 2 },\n  { name: \"triple\", multiplier: 3 },\n];\n\nexport const MAX_WORD_SCORE_MULTIPLIER = WORD_SCORE_MULTIPLIERS.reduce(\n  (max, current) => {\n    if (current.multiplier > max) {\n      return (max = current.multiplier);\n    }\n    return max;\n  },\n  1\n);\n\nconst SETTINGS: Settings = {\n  MAX_TILE_SCORE_MULTIPLIER,\n  POINTS_FOR_BINGO,\n  MIN_TILES_FOR_BINGO,\n  WORD_SCORE_MULTIPLIERS,\n  MAX_WORD_SCORE_MULTIPLIER,\n};\n\nexport default SETTINGS;\n","import { ScoreTable } from \"./interfaces\";\n\nconst SCORE_TABLE: ScoreTable = {\n  deu: {\n    displayName: \"Deutsch\",\n    scores: {\n      0: [\" \"],\n      1: [\"E\", \"N\", \"S\", \"I\", \"R\", \"T\", \"U\", \"A\", \"D\"],\n      2: [\"H\", \"G\", \"L\", \"O\"],\n      3: [\"M\", \"B\", \"W\", \"Z\"],\n      4: [\"C\", \"F\", \"K\", \"P\"],\n      6: [\"Ä\", \"J\", \"Ü\", \"V\"],\n      8: [\"Ö\", \"X\"],\n      10: [\"Q\", \"Y\"],\n    },\n  },\n  gwi: {\n    displayName: \"Dinju Zhuh Kʼyuu\", // Gwichʼin language\n    multigraphs: [\n      [\"A\", \"I\", \"I\"],\n      [\"A\", \"Į\", \"Į\"],\n      [\"T\", \"T\", \"H\"],\n      [\"D\", \"D\", \"H\"],\n      [\"K\", \"H\", \"W\"],\n      [\"S\", \"H\", \"R\"],\n      [\"Z\", \"H\", \"R\"],\n      [\"A\", \"A\"],\n      [\"C\", \"H\"],\n      [\"E\", \"E\"],\n      [\"Ą\", \"Ą\"],\n      [\"I\", \"I\"],\n      [\"Ę\", \"Ę\"],\n      [\"Į\", \"Į\"],\n      [\"O\", \"O\"],\n      [\"Ǫ\", \"Ǫ\"],\n      [\"T\", \"H\"],\n      [\"U\", \"U\"],\n      [\"Ų\", \"Ų\"],\n      [\"T\", \"S\"],\n      [\"T\", \"R\"],\n      [\"D\", \"H\"],\n      [\"G\", \"H\"],\n      [\"K\", \"H\"],\n      [\"S\", \"H\"],\n      [\"T\", \"Ł\"],\n      [\"G\", \"W\"],\n      [\"Z\", \"H\"],\n      [\"D\", \"R\"],\n      [\"K\", \"W\"],\n      [\"D\", \"L\"],\n      [\"D\", \"Z\"],\n    ],\n    scores: {\n      0: [\" \"],\n      1: [\"ʼ\", \"I\", \"A\", \"N\", \"T\", \"H\", \"Ą\", \"E\", \"Ę\", \"Į\", \"O\", \"Ǫ\", \"U\", \"Ų\"],\n      2: [\n        \"AA\",\n        \"CH\",\n        \"EE\",\n        \"ĄĄ\",\n        \"II\",\n        \"ĘĘ\",\n        \"ĮĮ\",\n        \"OO\",\n        \"ǪǪ\",\n        \"TH\",\n        \"UU\",\n        \"ŲŲ\",\n      ],\n      3: [\"AII\", \"AĮĮ\", \"D\", \"G\", \"K\", \"R\", \"Y\", \"S\", \"TTH\", \"W\"],\n      4: [\"TS\", \"L\", \"Ł\", \"TR\", \"DH\", \"GH\", \"KH\", \"SH\"],\n      5: [\"J\", \"TŁ\", \"V\", \"Z\"],\n      6: [\"GW\", \"ZH\", \"DR\", \"KW\"],\n      7: [\"DL\", \"DDH\", \"KHW\", \"SHR\"],\n      8: [\"DZ\"],\n      9: [\"ZHR\"],\n      10: [\"B\", \"F\", \"M\"],\n    },\n  },\n  eng: {\n    displayName: \"English\",\n    scores: {\n      0: [\" \"],\n      1: [\"E\", \"A\", \"I\", \"O\", \"N\", \"R\", \"T\", \"L\", \"S\", \"U\"],\n      2: [\"D\", \"G\"],\n      3: [\"B\", \"C\", \"M\", \"P\"],\n      4: [\"F\", \"H\", \"V\", \"W\", \"Y\"],\n      5: [\"K\"],\n      8: [\"J\", \"X\"],\n      10: [\"Q\", \"Z\"],\n    },\n  },\n  spa: {\n    displayName: \"español\",\n    multigraphs: [\n      [\"C\", \"H\"],\n      [\"L\", \"L\"],\n      [\"R\", \"R\"],\n    ],\n    scores: {\n      0: [\" \"],\n      1: [\"A\", \"E\", \"O\", \"I\", \"S\", \"N\", \"R\", \"U\", \"L\", \"T\"],\n      2: [\"D\", \"G\"],\n      3: [\"C\", \"B\", \"M\", \"P\"],\n      4: [\"H\", \"F\", \"V\", \"Y\"],\n      5: [\"CH\", \"Q\"],\n      8: [\"J\", \"LL\", \"Ñ\", \"RR\", \"X\"],\n      10: [\"Z\"],\n    },\n  },\n  fra: {\n    displayName: \"français\",\n    scores: {\n      0: [\" \"],\n      1: [\"E\", \"A\", \"I\", \"N\", \"O\", \"R\", \"S\", \"T\", \"U\", \"L\"],\n      2: [\"D\", \"M\", \"G\"],\n      3: [\"B\", \"C\", \"P\"],\n      4: [\"F\", \"H\", \"V\"],\n      8: [\"J\", \"Q\"],\n      10: [\"K\", \"W\", \"X\", \"Y\", \"Z\"],\n    },\n  },\n  ita: {\n    displayName: \"italiano\",\n    scores: {\n      0: [\" \"],\n      1: [\"O\", \"A\", \"I\", \"E\"],\n      2: [\"C\", \"R\", \"S\", \"T\"],\n      3: [\"L\", \"M\", \"N\", \"U\"],\n      5: [\"B\", \"D\", \"F\", \"P\", \"V\"],\n      8: [\"G\", \"H\", \"Z\"],\n      10: [\"Q\"],\n    },\n  },\n  hun: {\n    displayName: \"magyar\",\n    multigraphs: [\n      [\"S\", \"Z\"],\n      [\"G\", \"Y\"],\n      [\"N\", \"Y\"],\n      [\"C\", \"S\"],\n      [\"L\", \"Y\"],\n      [\"Z\", \"S\"],\n      [\"T\", \"Y\"],\n    ],\n    scores: {\n      0: [\" \"],\n      1: [\"A\", \"E\", \"K\", \"T\", \"Á\", \"L\", \"N\", \"R\", \"I\", \"M\", \"O\", \"S\"],\n      2: [\"B\", \"D\", \"G\", \"Ó\"],\n      3: [\"É\", \"H\", \"SZ\", \"V\"],\n      4: [\"F\", \"GY\", \"J\", \"Ö\", \"P\", \"U\", \"Ü\", \"Z\"],\n      5: [\"C\", \"Í\", \"NY\"],\n      7: [\"CS\", \"Ő\", \"Ú\", \"Ű\"],\n      8: [\"LY\", \"ZS\"],\n      10: [\"TY\"],\n    },\n  },\n  pol: {\n    displayName: \"polski\",\n    scores: {\n      0: [\" \"],\n      1: [\"A\", \"I\", \"E\", \"O\", \"N\", \"Z\", \"R\", \"S\", \"W\"],\n      2: [\"Y\", \"C\", \"D\", \"K\", \"L\", \"M\", \"P\", \"T\"],\n      3: [\"B\", \"G\", \"H\", \"J\", \"Ł\", \"U\"],\n      5: [\"Ą\", \"Ę\", \"F\", \"Ó\", \"Ś\", \"Ż\"],\n      6: [\"Ć\"],\n      7: [\"Ń\"],\n      9: [\"Ź\"],\n    },\n  },\n  por: {\n    displayName: \"português\",\n    scores: {\n      0: [\" \"],\n      1: [\"A\", \"E\", \"I\", \"O\", \"S\", \"U\", \"M\", \"R\", \"T\"],\n      2: [\"D\", \"L\", \"C\", \"P\"],\n      3: [\"N\", \"B\", \"Ç\"],\n      4: [\"F\", \"G\", \"H\", \"V\"],\n      5: [\"J\"],\n      6: [\"Q\"],\n      8: [\"X\", \"Z\"],\n    },\n  },\n  rus: {\n    displayName: \"русский\",\n    scores: {\n      0: [\" \"],\n      1: [\"О\", \"А\", \"Е\", \"И\", \"Н\", \"Р\", \"С\", \"Т\", \"В\"],\n      2: [\"Д\", \"К\", \"Л\", \"П\", \"У\", \"М\"],\n      3: [\"Б\", \"Г\", \"Ь\", \"Я\", \"Ё\"],\n      4: [\"Ы\", \"Й\"],\n      5: [\"З\", \"Ж\", \"Х\", \"Ц\", \"Ч\"],\n      8: [\"Ш\", \"Э\", \"Ю\"],\n      10: [\"Ф\", \"Щ\", \"Ъ\"],\n    },\n  },\n  ukr: {\n    displayName: \"українська\",\n    scores: {\n      0: [\" \"],\n      1: [\"О\", \"А\", \"И\", \"Н\", \"В\", \"Е\", \"І\", \"Т\", \"Р\"],\n      2: [\"К\", \"С\", \"Д\", \"Л\", \"М\", \"П\"],\n      3: [\"У\"],\n      4: [\"З\", \"Я\", \"Б\", \"Г\"],\n      5: [\"Ч\", \"Х\", \"Й\", \"Ь\"],\n      6: [\"Ж\", \"Ї\", \"Ц\", \"Ш\"],\n      7: [\"Ю\"],\n      8: [\"Є\", \"Ф\", \"Щ\"],\n      10: [\"Ґ\", \"'\"],\n    },\n  },\n};\n\nexport default SCORE_TABLE;\n","import { ScoreTable, Bonus } from \"../interfaces\";\nimport { getTilesInWord } from \"../index\";\nimport { isBonusDefined, isNextBonusAllowed, isBingoAllowed } from \"./bonus\";\nimport { isLanguageDefined } from \"./language\";\nimport { MIN_TILES_FOR_BINGO } from \"../settings\";\n\nexport function checkIsBonusDefined(multiplier: number): void {\n  if (!isBonusDefined(multiplier)) {\n    throw new RangeError(`No ${multiplier}x word bonus in the settings`);\n  }\n}\n\nexport function checkIsNextBonusAllowed(\n  input: string,\n  languageCode: string,\n  bonuses: Bonus[]\n): void {\n  if (!isNextBonusAllowed(getTilesInWord(input, { languageCode }), bonuses)) {\n    throw new Error();\n  }\n}\n\nexport function checkAreAllBonusesAllowed(\n  input: string,\n  languageCode: string,\n  bonuses: Bonus[]\n): void {\n  if (bonuses.length > getTilesInWord(input, { languageCode }).length) {\n    throw new Error();\n  }\n}\n\nexport function checkIsBingoAllowed(\n  input: string,\n  languageCode: string,\n  minTilesForBingo: number = MIN_TILES_FOR_BINGO\n): void {\n  if (!isBingoAllowed(input, languageCode, minTilesForBingo)) {\n    throw new Error();\n  }\n}\n\nexport function checkIsLanguageDefined(\n  scoreTable: ScoreTable,\n  languageCode: string\n): void {\n  if (!isLanguageDefined(scoreTable, languageCode)) {\n    throw new RangeError(\"Unsupported language\");\n  }\n}\n","import SCORE_TABLE from \"../scoreTable\";\nimport { ScoreTable, Language } from \"../interfaces\";\n\nexport function isLanguageDefined(\n  scoreTable: ScoreTable = SCORE_TABLE,\n  languageCode: string\n): boolean {\n  return scoreTable.hasOwnProperty(languageCode);\n}\n\nexport function getSupportedLanguages(\n  scoreTable: ScoreTable = SCORE_TABLE\n): Language[] {\n  return Array.from(Object.keys(scoreTable)).map((languageCode) => ({\n    languageCode,\n    displayName: scoreTable[languageCode].displayName,\n  }));\n}\n","import { WORD_SCORE_MULTIPLIERS, MIN_TILES_FOR_BINGO } from \"../settings\";\nimport { getTilesInWord } from \"../index\";\nimport { checkIsBonusDefined } from \"./error\";\nimport {\n  Bonus,\n  BonusType,\n  WordBonus,\n  TileBonus,\n  Multiplier,\n} from \"../interfaces\";\n\nexport function getTileBonuses(bonuses: Bonus[]): TileBonus[] {\n  return bonuses.filter(\n    (bonus) => bonus.type === BonusType.Tile\n  ) as TileBonus[];\n}\n\nexport function getWordBonuses(bonuses: Bonus[]): WordBonus[] {\n  return bonuses.filter(\n    (bonus) => bonus.type === BonusType.Word\n  ) as WordBonus[];\n}\n\nexport function getWordMultiplier(wordBonuses: WordBonus[] = []): number {\n  return wordBonuses.reduce((totalMultiplier, bonus) => {\n    checkIsBonusDefined(bonus.multiplier);\n    return totalMultiplier * bonus.multiplier;\n  }, 1);\n}\n\nexport function getWordBonusTypes(\n  wordScoreMultipliers: Multiplier[] = WORD_SCORE_MULTIPLIERS\n): string[] {\n  return wordScoreMultipliers.map((bonus) => bonus.name);\n}\n\nexport const isBonusDefined = (\n  multiplier: number,\n  wordScoreMultipliers: Multiplier[] = WORD_SCORE_MULTIPLIERS\n): boolean => {\n  return wordScoreMultipliers.some((bonus) => bonus.multiplier === multiplier);\n};\n\nexport const isNextBonusAllowed = (\n  tiles: string[],\n  bonuses: Bonus[]\n): boolean => {\n  return tiles.length > bonuses.length;\n};\n\nexport const isBingoAllowed = (\n  input: string,\n  languageCode: string,\n  minTilesForBingo: number = MIN_TILES_FOR_BINGO\n): boolean => {\n  return getTilesInWord(input, { languageCode }).length >= minTilesForBingo;\n};\n","export function sortArrayByLengthDescending<T extends Array<any> | string>(\n  arr: T[]\n): T[] {\n  return [...arr].sort((prev, curr) => curr.length - prev.length);\n}\n\nexport function findIndexOfSubarray<T>(arr: T[], subArr: T[]): number {\n  for (let i = 0; i < 1 + (arr.length - subArr.length); ++i) {\n    if (subArr.every((element, j) => element === arr[i + j])) {\n      return i;\n    }\n  }\n  return -1;\n}\n\nexport function joinSubarrayIntoSingleElement<T>(arr: T[], subArr: T[]): T[] {\n  const subArrIndexAt = findIndexOfSubarray(arr, subArr);\n  if (subArrIndexAt !== -1) {\n    return [\n      ...arr.slice(0, subArrIndexAt),\n      subArr.join(\"\"),\n      ...arr.slice(subArrIndexAt + subArr.length, arr.length),\n    ] as T[];\n  }\n  return [...arr];\n}\n\nexport function joinAllSubarraysIntoSingleElements<T>(\n  arr: T[],\n  subArr: T[]\n): T[] {\n  const subArrIndexAt = findIndexOfSubarray(arr, subArr);\n  if (subArrIndexAt === -1) {\n    return [...arr];\n  }\n  return joinAllSubarraysIntoSingleElements(\n    joinSubarrayIntoSingleElement(arr, subArr),\n    subArr\n  );\n}\n","import { ScoreTable, Multigraph } from \"../interfaces\";\nimport {\n  sortArrayByLengthDescending,\n  joinAllSubarraysIntoSingleElements,\n} from \"./array\";\nimport { checkIsLanguageDefined } from \"./error\";\n\nexport function isLanguageWithMultigraphs(\n  scoreTable: ScoreTable,\n  languageCode: string\n): boolean {\n  checkIsLanguageDefined(scoreTable, languageCode);\n  return scoreTable[languageCode].hasOwnProperty(\"multigraphs\");\n}\n\nexport function getMultigraphsInLanguage(\n  scoreTable: ScoreTable,\n  languageCode: string\n): Multigraph[] {\n  if (isLanguageWithMultigraphs(scoreTable, languageCode)) {\n    return sortArrayByLengthDescending(scoreTable[languageCode].multigraphs!);\n  }\n  return [];\n}\n\nexport function joinMultigraphsInTiles(\n  letters: string[],\n  multigraphs: Multigraph[]\n): string[] {\n  return multigraphs.reduce(\n    (letters, multigraph) =>\n      (letters = joinAllSubarraysIntoSingleElements(letters, multigraph)),\n    letters\n  );\n}\n","import {\n  WordScoreOptions,\n  TileScoreOptions,\n  TilesInWordOptions,\n  WordBonus,\n  TileBonus,\n} from \"./interfaces\";\nimport { POINTS_FOR_BINGO } from \"./settings\";\nimport SCORE_TABLE from \"./scoreTable\";\nimport {\n  getTileBonuses,\n  getWordBonuses,\n  getWordMultiplier,\n} from \"./utilities/bonus\";\nimport {\n  isLanguageWithMultigraphs,\n  getMultigraphsInLanguage,\n  joinMultigraphsInTiles,\n} from \"./utilities/multigraph\";\nimport {\n  checkIsLanguageDefined,\n  checkAreAllBonusesAllowed,\n  checkIsBingoAllowed,\n} from \"./utilities/error\";\n\nexport function getWordScore(\n  input: string,\n  {\n    languageCode,\n    scoreTable = SCORE_TABLE,\n    bonuses = [],\n    isBingoUsed = false,\n  }: WordScoreOptions\n): number {\n  if (isBingoUsed) checkIsBingoAllowed(input, languageCode);\n  checkIsLanguageDefined(scoreTable, languageCode);\n  checkAreAllBonusesAllowed(input, languageCode, bonuses);\n\n  const tileBonuses: TileBonus[] = getTileBonuses(bonuses);\n  const wordBonuses: WordBonus[] = getWordBonuses(bonuses);\n  const pointsForBingo = isBingoUsed ? POINTS_FOR_BINGO : 0;\n\n  function getTileMultiplier(index: number): number {\n    return tileBonuses.find((tile) => tile.index === index)?.multiplier || 1;\n  }\n\n  // Prettier can't handle it\n  // prettier-ignore\n  return getTilesInWord(input, { scoreTable, languageCode })\n      .map((tile, index) => \n        getTileScore(tile, { languageCode, multiplier: getTileMultiplier(index)})\n      )\n      .reduce((acc, curr) => acc + curr, 0) * getWordMultiplier(wordBonuses) + pointsForBingo;\n}\n\nexport function getTileScore(\n  input: string,\n  { languageCode, scoreTable = SCORE_TABLE, multiplier = 1 }: TileScoreOptions\n): number {\n  checkIsLanguageDefined(scoreTable, languageCode);\n\n  const score = Number(\n    Object.keys(scoreTable[languageCode].scores).find((key) =>\n      scoreTable[languageCode].scores[key].includes(input.toUpperCase())\n    )\n  );\n\n  return score * multiplier;\n}\n\nexport function getTilesInWord(\n  input: string,\n  { languageCode, scoreTable = SCORE_TABLE }: TilesInWordOptions\n): string[] {\n  checkIsLanguageDefined(scoreTable, languageCode);\n\n  const letters = Array.from(input.toUpperCase());\n\n  if (isLanguageWithMultigraphs(scoreTable, languageCode)) {\n    return joinMultigraphsInTiles(\n      letters,\n      getMultigraphsInLanguage(scoreTable, languageCode)\n    );\n  }\n\n  return letters;\n}\n\nexport { default as SETTINGS } from \"./settings\";\nexport { default as SCORE_TABLE } from \"./scoreTable\";\nexport { getSupportedLanguages } from \"./utilities/language\";\nexport * from \"./utilities/error\";\nexport {\n  getWordBonusTypes,\n  isNextBonusAllowed,\n  isBingoAllowed,\n} from \"./utilities/bonus\";\n\nexport default {\n  getWordScore,\n  getTileScore,\n  getTilesInWord,\n};\n","import { Bonus, BonusType } from \"../modules/calculator/interfaces\";\nimport {\n  SetInputAction,\n  ChangeLanguageAction,\n  CycleTileBonusAction,\n} from \"../actions/wordActions\";\n\nexport interface Action {\n  type: string;\n  payload?: {};\n}\n\nexport interface State {\n  input: string;\n  language: string;\n  bonuses: Bonus[];\n  isBingoUsed: boolean;\n}\n\nexport default function wordReducer(state: State, action: Action): State {\n  switch (action.type) {\n    case \"INPUT_CHANGED\": {\n      const {\n        payload: { input, minTilesForBingo },\n      } = action as SetInputAction;\n\n      const { bonuses, isBingoUsed } = state;\n\n      return {\n        ...state,\n        input,\n        bonuses: bonuses.filter((bonus) => bonus.index < input.length),\n        isBingoUsed: input.length >= minTilesForBingo ? isBingoUsed : false,\n      };\n    }\n    case \"LANGUAGE_CHANGED\": {\n      const {\n        payload: { language },\n      } = action as ChangeLanguageAction;\n\n      return { ...state, language };\n    }\n    case \"TILE_MULTIPLIER_ADDED\": {\n      const {\n        payload: { tileIndex },\n      } = action as CycleTileBonusAction;\n\n      return {\n        ...state,\n        bonuses: [\n          ...state.bonuses,\n          { type: BonusType.Tile, index: tileIndex, multiplier: 2 },\n        ],\n      };\n    }\n    case \"TILE_MULTIPLIER_INCREMENTED\": {\n      const {\n        payload: { tileIndex },\n      } = action as CycleTileBonusAction;\n\n      return {\n        ...state,\n        bonuses: state.bonuses.map((tile) => {\n          if (tile.index === tileIndex) {\n            return { ...tile, multiplier: tile.multiplier + 1 };\n          }\n          return tile;\n        }),\n      };\n    }\n    case \"WORD_MULTIPLIER_ADDED\": {\n      const {\n        payload: { tileIndex },\n      } = action as CycleTileBonusAction;\n\n      return {\n        ...state,\n        bonuses: state.bonuses.map((tile) => {\n          if (tile.index === tileIndex) {\n            return { ...tile, type: BonusType.Word, multiplier: 2 };\n          }\n          return tile;\n        }),\n      };\n    }\n    case \"WORD_MULTIPLIER_INCREMENTED\": {\n      const {\n        payload: { tileIndex },\n      } = action as CycleTileBonusAction;\n\n      return {\n        ...state,\n        bonuses: state.bonuses.map((tile) => {\n          if (tile.index === tileIndex) {\n            return { ...tile, multiplier: tile.multiplier + 1 };\n          }\n          return tile;\n        }),\n      };\n    }\n    case \"WORD_MULTIPLIER_REMOVED\": {\n      const {\n        payload: { tileIndex },\n      } = action as CycleTileBonusAction;\n\n      return {\n        ...state,\n        bonuses: state.bonuses.filter((tile) => tile.index !== tileIndex),\n      };\n    }\n    case \"BINGO_TOGGLED\": {\n      return { ...state, isBingoUsed: !state.isBingoUsed };\n    }\n    case \"WORD_RESET\": {\n      return {\n        ...state,\n        input: \"\",\n        bonuses: [],\n        isBingoUsed: false,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import React, { useReducer, createContext } from \"react\";\nimport { SETTINGS } from \"../modules/calculator\";\nimport wordReducer, { State } from \"../reducers/wordReducer\";\n\nconst BINGO_NAME = \"Bingo\";\n\nconst initialState: State = {\n  input: \"\",\n  language: \"eng\",\n  bonuses: [],\n  isBingoUsed: false,\n};\n\nexport const WordContext = createContext<any>(initialState); // TODO\n\nexport const WordContextProvider: React.FC = function ({ children }) {\n  const [state, dispatch] = useReducer(wordReducer, initialState);\n  return (\n    <WordContext.Provider\n      value={{ wordReducer: [state, dispatch], SETTINGS, BINGO_NAME }}\n    >\n      {children}\n    </WordContext.Provider>\n  );\n};\n","import { Action, State } from \"../reducers/wordReducer\";\nimport { SETTINGS, checkIsBingoAllowed } from \"../modules/calculator\";\nimport { BonusType } from \"../modules/calculator/interfaces\";\n\nconst {\n  MAX_TILE_SCORE_MULTIPLIER,\n  MAX_WORD_SCORE_MULTIPLIER,\n  MIN_TILES_FOR_BINGO,\n} = SETTINGS;\n\nexport interface SetInputAction extends Action {\n  type: \"INPUT_CHANGED\";\n  payload: { input: string; minTilesForBingo: number };\n}\n\nexport function setInput(input: string): SetInputAction {\n  return {\n    type: \"INPUT_CHANGED\",\n    payload: { input, minTilesForBingo: MIN_TILES_FOR_BINGO },\n  };\n}\n\nexport interface ChangeLanguageAction extends Action {\n  type: \"LANGUAGE_CHANGED\";\n  payload: { language: string };\n}\n\nexport function changeLanguage(languageCode: string): ChangeLanguageAction {\n  return { type: \"LANGUAGE_CHANGED\", payload: { language: languageCode } };\n}\n\nexport type MultiplierActionType =\n  | \"WORD_MULTIPLIER_ADDED\"\n  | \"WORD_MULTIPLIER_INCREMENTED\"\n  | \"WORD_MULTIPLIER_REMOVED\"\n  | \"TILE_MULTIPLIER_ADDED\"\n  | \"TILE_MULTIPLIER_INCREMENTED\";\n\nexport interface CycleTileBonusAction extends Action {\n  type: MultiplierActionType;\n  payload: { tileIndex: number };\n}\n\nexport interface CancelAction extends Action {\n  type: \"ACTION_CANCELLED\";\n}\n\nexport function cycleTileBonus(\n  state: State,\n  tileIndex: number\n): CycleTileBonusAction | CancelAction {\n  const tileBonus = state.bonuses.find((tile) => tile.index === tileIndex);\n  if (tileBonus) {\n    if (tileBonus.type === BonusType.Tile) {\n      if (tileBonus.multiplier === MAX_TILE_SCORE_MULTIPLIER) {\n        return { type: \"WORD_MULTIPLIER_ADDED\", payload: { tileIndex } };\n      }\n      return { type: \"TILE_MULTIPLIER_INCREMENTED\", payload: { tileIndex } };\n    } else if (tileBonus.type === BonusType.Word) {\n      if (tileBonus.multiplier === MAX_WORD_SCORE_MULTIPLIER) {\n        return { type: \"WORD_MULTIPLIER_REMOVED\", payload: { tileIndex } };\n      }\n      return { type: \"WORD_MULTIPLIER_INCREMENTED\", payload: { tileIndex } };\n    }\n    return { type: \"ACTION_CANCELLED\" };\n  }\n  return { type: \"TILE_MULTIPLIER_ADDED\", payload: { tileIndex } };\n}\n\nexport function toggleBingo(state: State): Action {\n  try {\n    checkIsBingoAllowed(state.input, state.language);\n    return { type: \"BINGO_TOGGLED\" };\n  } catch {\n    return { type: \"ACTION_CANCELLED\" };\n  }\n}\n","import React, { useContext } from \"react\";\nimport { WordContext } from \"../context/wordContext\";\nimport { getSupportedLanguages } from \"../modules/calculator\";\nimport { changeLanguage } from \"../actions/wordActions\";\nimport styled from \"styled-components\";\n\nconst languages = getSupportedLanguages();\n\nexport default function LangSelect() {\n  const {\n    wordReducer: [state, dispatch],\n  } = useContext(WordContext);\n\n  return (\n    <>\n      Language:\n      <Select\n        value={state.language}\n        onChange={(e) => dispatch(changeLanguage(e.target.value))}\n        data-testid=\"lang-select\"\n      >\n        {languages.map(({ languageCode, displayName }) => (\n          <option key={languageCode} value={languageCode}>\n            {displayName}\n          </option>\n        ))}\n      </Select>\n    </>\n  );\n}\n\nconst Select = styled.select`\n  font-size: 1rem;\n  padding: 0.25rem;\n  margin-left: 0.5rem;\n  border: 1px solid black;\n  border-radius: 0.25em;\n  background-color: white;\n\n  &:focus {\n    outline: none;\n    border: 2px solid blue;\n  }\n`;\n","import React, { useContext } from \"react\";\nimport { WordContext } from \"../context/wordContext\";\nimport { setInput } from \"../actions/wordActions\";\nimport styled from \"styled-components\";\n\nexport default function WordInput() {\n  const {\n    wordReducer: [state, dispatch],\n  } = useContext(WordContext);\n\n  return (\n    <>\n      <Input\n        type=\"text\"\n        value={state.input}\n        onChange={(e) => dispatch(setInput(e.target.value))}\n        data-testid=\"word-input\"\n        placeholder=\"Type a word to start\"\n      />\n      {state.input && (\n        <WordReset onClick={() => dispatch({ type: \"WORD_RESET\" })}>\n          Reset\n        </WordReset>\n      )}\n    </>\n  );\n}\n\nconst Input = styled.input`\n  display: block;\n  font-size: 1.2rem;\n  padding: 0.5rem;\n  margin: 0.5rem auto;\n  border: 1px solid black;\n  border-radius: 0.25em;\n\n  &:focus {\n    outline: none;\n    border: 2px solid blue;\n  }\n`;\n\nconst WordReset = styled.button`\n  display: block;\n  cursor: pointer;\n  background-color: darkred;\n  color: white;\n  font-size: 1rem;\n  padding: 0.5rem;\n  margin: 0.25rem auto;\n  border: 1px solid black;\n  border-radius: 0.25em;\n\n  &:focus {\n    outline: none;\n    border: 2px solid blue;\n  }\n`;\n","import styled from \"styled-components\";\n\nconst Tile = styled.div`\n  display: inline-block;\n  position: relative;\n  height: 1.5rem;\n  width: 1.5rem;\n  padding: 1rem;\n  margin: 0.125rem;\n  border: 1px solid black;\n  border-radius: 5%;\n  background-color: antiquewhite;\n  color: black;\n  font-size: 2.6rem;\n  font-family: \"Nunito Sans\", sans-serif;\n  font-weight: 700;\n  cursor: pointer;\n  user-select: none;\n  animation: fadeIn 0.3s;\n\n  &:focus {\n    outline: none;\n    border: 2px solid blue;\n  }\n\n  &:hover {\n    transform: scale(1.1);\n  }\n\n  @keyframes fadeIn {\n    0% {\n      opacity: 0;\n    }\n    100% {\n      opacity: 1;\n    }\n  }\n`;\n\nexport default Tile;\n","import React from \"react\";\nimport { BonusType, Bonus } from \"../../modules/calculator/interfaces\";\nimport Tile from \"./Tile\";\nimport styled, { css } from \"styled-components\";\n\nexport default function LetterTile({\n  index = 0,\n  character = \" \",\n  score = 0,\n  bonus,\n  cycleLetterBonus,\n}: LetterTileProps) {\n  const isBlankTile = character === \" \";\n  const isScoreInvalid = Number.isNaN(score);\n\n  function renderScore() {\n    if (isBlankTile) return null;\n    if (isScoreInvalid) return \"?\";\n    return score;\n  }\n\n  return (\n    <StyledLetterTile\n      isScoreInvalid={isScoreInvalid}\n      bonusType={bonus.type}\n      multiplier={bonus.multiplier}\n      onClick={() => cycleLetterBonus(index)}\n      onKeyDown={(e) => (e.key === \"Enter\" ? cycleLetterBonus(index) : null)}\n      tabIndex={0}\n    >\n      <Character multigraph={character.length > 1 && character.length}>\n        {character.toUpperCase()}\n      </Character>\n      <Score>{renderScore()}</Score>\n    </StyledLetterTile>\n  );\n}\n\ninterface IStyledLetterTile {\n  isScoreInvalid: boolean;\n  bonusType: BonusType;\n  multiplier: number;\n}\n\nconst StyledLetterTile = styled(Tile)<IStyledLetterTile>`\n  background-color: antiquewhite;\n  color: green;\n\n  ${(props) =>\n    props.isScoreInvalid &&\n    css`\n      background-color: lightgray;\n      cursor: default;\n    `}\n\n  ${(props) => {\n    if (props.bonusType === BonusType.Tile) {\n      if (props.multiplier === 2) {\n        return css`\n          background-color: #6cf;\n        `;\n      } else if (props.multiplier === 3) {\n        return css`\n          background-color: #09f;\n        `;\n      }\n    }\n\n    if (props.bonusType === BonusType.Word) {\n      if (props.multiplier === 2) {\n        return css`\n          background-color: #f9f;\n        `;\n      } else if (props.multiplier === 3) {\n        return css`\n          background-color: #f66;\n        `;\n      }\n    }\n  }}\n`;\n\ninterface LetterTileProps {\n  index: number;\n  character: string;\n  score: number;\n  bonus: Bonus;\n  cycleLetterBonus: Function;\n}\n\ninterface CharacterProps {\n  multigraph: number | false;\n}\n\nconst Character = styled.span<CharacterProps>`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-60%, -55%);\n  line-height: 1;\n\n  ${(props) => {\n    if (props.multigraph === 2) {\n      return css`\n        transform: translate(-60%, -55%) scaleX(0.65);\n      `;\n    }\n\n    if (props.multigraph === 3) {\n      return css`\n        transform: translate(-60%, -55%) scaleX(0.4);\n      `;\n    }\n  }}\n`;\n\nconst Score = styled.span`\n  position: relative;\n  left: 0.925rem;\n  top: -0.25rem;\n  font-size: 1.25rem;\n`;\n","import React from \"react\";\nimport Tile from \"./Tile\";\nimport styled, { css } from \"styled-components\";\n\nexport default function BonusTile({ type, name }: BonusTileProps) {\n  return (\n    <StyledBonusTile type={type} name={name}>\n      <BonusName>{`${name} ${type} SCORE`}</BonusName>\n    </StyledBonusTile>\n  );\n}\n\ninterface IStyledBonusTile {\n  type: string; // \"letter\" | \"word\";\n  name: string; // \"double\" | \"triple\";\n}\n\nconst StyledBonusTile = styled(Tile)<IStyledBonusTile>`\n  cursor: default;\n\n  ${(props) => {\n    if (props.type === \"letter\") {\n      if (props.name === \"double\") {\n        return css`\n          background-color: #6cf;\n        `;\n      } else if (props.name === \"triple\") {\n        return css`\n          background-color: #09f;\n        `;\n      }\n    }\n\n    if (props.type === \"word\") {\n      if (props.name === \"double\") {\n        return css`\n          background-color: #f9f;\n        `;\n      } else if (props.name === \"triple\") {\n        return css`\n          background-color: #f66;\n        `;\n      }\n    }\n  }}\n`;\n\ninterface BonusTileProps {\n  type: string;\n  name: string;\n}\n\nconst BonusName = styled.span`\n  text-transform: uppercase;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  font-size: 0.5rem;\n  color: black;\n`;\n","import React from \"react\";\nimport Tile from \"./Tile\";\nimport styled from \"styled-components\";\n\nexport default function BingoTile({\n  bingoName = \"Bingo\",\n  isBingoAllowed = false,\n  isBingoUsed = false,\n  textWhenBingoUsed = \"active\",\n  toggleBingo,\n}: BingoTileProps) {\n  return (\n    <StyledBingoTile\n      allowed={isBingoAllowed}\n      onClick={toggleBingo}\n      onKeyDown={(e) => (e.key === \"Enter\" ? toggleBingo() : null)}\n      tabIndex={0}\n    >\n      <BingoName>{bingoName}</BingoName>\n      {isBingoUsed && <TextWhenUsed>{textWhenBingoUsed}</TextWhenUsed>}\n    </StyledBingoTile>\n  );\n}\n\ninterface IStyledBingoTile {\n  allowed: boolean;\n}\n\nconst StyledBingoTile = styled(Tile)<IStyledBingoTile>`\n  background-color: ${(props) => (props.allowed ? \"orange\" : \"lightgray\")};\n  cursor: ${(props) => (props.allowed ? \"pointer\" : \"default\")};\n`;\n\ninterface BingoTileProps {\n  bingoName: string;\n  toggleBingo: () => void;\n  isBingoAllowed: boolean;\n  isBingoUsed: boolean;\n  textWhenBingoUsed: string;\n}\n\nconst BingoName = styled.span`\n  text-transform: uppercase;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  font-size: 0.5rem;\n  color: black;\n`;\n\nconst TextWhenUsed = styled.span`\n  text-transform: uppercase;\n  position: absolute;\n  right: 0.25rem;\n  top: 2.5rem;\n  font-size: 0.825rem;\n  color: black;\n`;\n","import React, { useContext } from \"react\";\nimport { WordContext } from \"../context/wordContext\";\nimport { getTileScore, getTilesInWord } from \"../modules/calculator\";\nimport { cycleTileBonus } from \"../actions/wordActions\";\nimport { LetterTile } from \"./Tile\";\nimport { BonusType, Bonus } from \"../modules/calculator/interfaces\";\n\nexport default function LetterTiles() {\n  const {\n    wordReducer: [state, dispatch],\n  } = useContext(WordContext);\n  const tiles = getTilesInWord(state.input, { languageCode: state.language });\n\n  function getTileScoreMultiplier(index: number) {\n    return (\n      state.bonuses.find(\n        (bonus: Bonus) => bonus.index === index && bonus.type === BonusType.Tile\n      )?.multiplier ?? 1\n    );\n  }\n\n  function getTileBonus(index: number) {\n    const bonus = state.bonuses.find((bonus: Bonus) => bonus.index === index);\n    if (bonus) return bonus;\n    return { index, type: \"none\", multiplier: 1 };\n  }\n\n  return (\n    <div>\n      {tiles.map((tile, index) => (\n        <LetterTile\n          key={index}\n          index={index}\n          character={tile}\n          score={getTileScore(tile, {\n            languageCode: state.language,\n            multiplier: getTileScoreMultiplier(index),\n          })}\n          bonus={getTileBonus(index)}\n          cycleLetterBonus={() => dispatch(cycleTileBonus(state, index))}\n        />\n      ))}\n    </div>\n  );\n}\n","import React, { useContext } from \"react\";\nimport { WordContext } from \"../context/wordContext\";\nimport { getWordScore } from \"../modules/calculator\";\nimport styled from \"styled-components\";\n\nconst INVALID_SCORE_TEXT = \"At least one tile invalid\";\n\nexport default function WordScore() {\n  const {\n    wordReducer: [state],\n  } = useContext(WordContext);\n\n  const score = getWordScore(state.input, {\n    languageCode: state.language,\n    bonuses: state.bonuses,\n    isBingoUsed: state.isBingoUsed,\n  });\n\n  const isScoreInvalid = Number.isNaN(score);\n\n  return (\n    <StyledWordScore>\n      Word score:{\" \"}\n      {isScoreInvalid ? (\n        INVALID_SCORE_TEXT\n      ) : (\n        <span data-testid=\"word-score-value\">{score}</span>\n      )}\n    </StyledWordScore>\n  );\n}\n\nconst StyledWordScore = styled.span`\n  font-size: 1.5rem;\n`;\n","import React, { useContext } from \"react\";\nimport { WordContext } from \"../context/wordContext\";\nimport { isBingoAllowed, getWordBonusTypes } from \"../modules/calculator\";\nimport { toggleBingo } from \"../actions/wordActions\";\nimport { BonusTile, BingoTile } from \"./Tile\";\n\nexport default function BonusTiles() {\n  const wordBonusTypes = getWordBonusTypes().map((bonus) => ({\n    name: bonus,\n    type: \"word\",\n  }));\n\n  const letterBonusTypes = [\n    { name: \"double\", type: \"letter\" },\n    { name: \"triple\", type: \"letter\" },\n  ];\n\n  const {\n    wordReducer: [state, dispatch],\n    SETTINGS: { POINTS_FOR_BINGO },\n    BINGO_NAME,\n  } = useContext(WordContext);\n\n  const isGameUsingBingo = POINTS_FOR_BINGO > 0;\n\n  return (\n    <>\n      {isGameUsingBingo && (\n        <BingoTile\n          key={BINGO_NAME}\n          bingoName={BINGO_NAME}\n          toggleBingo={() => dispatch(toggleBingo(state))}\n          isBingoAllowed={isBingoAllowed(state.input, state.language)}\n          isBingoUsed={state.isBingoUsed}\n          textWhenBingoUsed=\"ACTIVE\"\n        />\n      )}\n      {letterBonusTypes.map((bonus) => (\n        <BonusTile\n          key={`letter_${bonus.name}`}\n          type={bonus.type}\n          name={bonus.name}\n        />\n      ))}\n      {wordBonusTypes.map((bonus) => (\n        <BonusTile\n          key={`word_${bonus.name}`}\n          type={bonus.type}\n          name={bonus.name}\n        />\n      ))}\n    </>\n  );\n}\n","import React, { useContext } from \"react\";\nimport { WordContext } from \"../context/wordContext\";\nimport BonusTiles from \"./BonusTiles\";\n\nexport default function Instructions() {\n  const {\n    SETTINGS: { POINTS_FOR_BINGO, MIN_TILES_FOR_BINGO },\n    BINGO_NAME,\n  } = useContext(WordContext);\n  const isGameUsingBingo = POINTS_FOR_BINGO > 0;\n\n  return (\n    <>\n      <p>Possible bonuses:</p>\n      <BonusTiles />\n      <p>Click on a tile to cycle its bonus</p>\n      <p>A blank tile can be entered by using the spacebar</p>\n      {isGameUsingBingo && (\n        <p>\n          {BINGO_NAME} can be activated when there are at least{\" \"}\n          {MIN_TILES_FOR_BINGO} tiles used\n        </p>\n      )}\n      <p>There cannot be more word + letter bonuses than letters in a word</p>\n      <p>\n        <a href=\"https://en.wikipedia.org/wiki/Scrabble#Scoring\">\n          Scrabble scoring rules\n        </a>\n      </p>\n    </>\n  );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nexport default function Footer() {\n  return (\n    <StyledFooter>\n      SCRABBLE® is a registered trademark and all intellectual property rights\n      are owned by their respective owners: Hasbro, Zynga, J.W. Spear & Mattel,\n      etc.\n    </StyledFooter>\n  );\n}\n\nconst StyledFooter = styled.footer`\n  font-size: 0.625rem;\n`;\n","import React from \"react\";\nimport LangSelect from \"./LangSelect\";\nimport WordInput from \"./WordInput\";\nimport LetterTiles from \"./LetterTiles\";\nimport WordScore from \"./WordScore\";\nimport Instructions from \"./Instructions\";\nimport Footer from \"./Footer\";\nimport styled from \"styled-components\";\n\nimport { WordContextProvider } from \"../context/wordContext\";\n\nexport default function App() {\n  return (\n    <StyledApp>\n      <WordContextProvider>\n        <LangSelect />\n        <WordInput />\n        <LetterTiles />\n        <WordScore />\n        <Instructions />\n        <Footer />\n      </WordContextProvider>\n    </StyledApp>\n  );\n}\n\nconst StyledApp = styled.div`\n  text-align: center;\n  max-width: 800px;\n  padding: 2rem;\n  margin: 2rem auto;\n  border: 4px solid white;\n  border-radius: 5px;\n  background-color: #3cb371;\n\n  @media (max-width: 480px) {\n    .App {\n      border: none;\n      margin: 0 auto;\n    }\n\n    html {\n      background-color: #3cb371;\n    }\n  }\n`;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}