{"version":3,"sources":["modules/scoretable.js","modules/Letter.js","modules/Word.js","components/Tile/LetterTile.js","components/Tile/BonusTile.js","components/App.js","serviceWorker.js","index.js"],"names":["WORD_SCORE_MULTIPLIERS","double","triple","SCORE_TABLE","DE","displayName","0","1","2","3","4","6","8","10","EN","5","ES","digraphs","FR","IT","HU","7","PL","9","PT","RU","UA","Letter","character","languageCode","TypeError","hasOwnProperty","RangeError","this","_scoreMultiplier","Number","Object","keys","find","key","includes","toUpperCase","n","isInteger","Word","input","letters","createLettersFromInput","bonusesUsed","isBingoUsed","Array","from","checkForDigraphs","map","letter","i","length","digraph","splice","some","element","score","totalTimesBonusesUsed","timesUsed","scoreMultiplier","bonusType","isNextWordBonusAllowed","isBingoAllowed","isAnyLetterInvalid","NaN","reduce","prev","curr","multiplierTotal","SCORE_MULTIPLIERS","LetterTile","index","cycleLetterBonus","isInvalidLetter","isNaN","className","style","backgroundColor","color","styleDiv","onClick","defaultProps","BonusTile","handleWordBonus","cursor","renderBonusName","App","state","localStorage","getItem","word","handleInputChange","e","setState","target","value","updateWord","handleLanguageChange","setItem","toggleBingo","addBonus","renderLetterTiles","renderWordScore","data-testid","renderLanguageOptions","options","push","onChange","type","placeholder","href","fontSize","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.9d7ba45a.chunk.js","sourcesContent":["export const MIN_LETTER_SCORE_MULTIPLIER = 1;\nexport const MAX_LETTER_SCORE_MULTIPLIER = 3;\nexport const POINTS_FOR_BINGO = 50;\nexport const MINIMUM_LETTERS_FOR_BINGO = 7;\nexport const WORD_SCORE_MULTIPLIERS = {\n  double: 2,\n  triple: 3\n}\n\nexport const SCORE_TABLE = {\n  DE: {\n    displayName: \"Deutsch\",\n    0: [\" \"],\n    1: [\"E\", \"N\", \"S\", \"I\", \"R\", \"T\", \"U\", \"A\", \"D\"],\n    2: [\"H\", \"G\", \"L\", \"O\"],\n    3: [\"M\", \"B\", \"W\", \"Z\"],\n    4: [\"C\", \"F\", \"K\", \"P\"],\n    6: [\"Ä\", \"J\", \"Ü\", \"V\"],\n    8: [\"Ö\", \"X\"],\n    10: [\"Q\", \"Y\"]\n  },\n  EN: {\n    displayName: \"English\",\n    0: [\" \"],\n    1: [\"E\", \"A\", \"I\", \"O\", \"N\", \"R\", \"T\", \"L\", \"S\", \"U\"],\n    2: [\"D\", \"G\"],\n    3: [\"B\", \"C\", \"M\", \"P\"],\n    4: [\"F\", \"H\", \"V\", \"W\", \"Y\"],\n    5: [\"K\"],\n    8: [\"J\", \"X\"],\n    10: [\"Q\", \"Z\"]\n  },\n  ES: {\n    displayName: \"español\",\n    digraphs: [\n      [\"C\", \"H\"],\n      [\"L\", \"L\"],\n      [\"R\", \"R\"]\n    ],\n    0: [\" \"],\n    1: [\"A\", \"E\", \"O\", \"I\", \"S\", \"N\", \"R\", \"U\", \"L\", \"T\"],\n    2: [\"D\", \"G\"],\n    3: [\"C\", \"B\", \"M\", \"P\"],\n    4: [\"H\", \"F\", \"V\", \"Y\"],\n    5: [\"CH\", \"Q\"],\n    8: [\"J\", \"LL\", \"Ñ\", \"RR\", \"X\"],\n    10: [\"Z\"]\n  },\n  FR: {\n    displayName: \"français\",\n    0: [\" \"],\n    1: [\"E\", \"A\", \"I\", \"N\", \"O\", \"R\", \"S\", \"T\", \"U\", \"L\"],\n    2: [\"D\", \"M\", \"G\"],\n    3: [\"B\", \"C\", \"P\"],\n    4: [\"F\", \"H\", \"V\"],\n    8: [\"J\", \"Q\"],\n    10: [\"K\", \"W\", \"X\", \"Y\", \"Z\"]\n  },\n  IT: {\n    displayName: \"italiano\",\n    0: [\" \"],\n    1: [\"O\", \"A\", \"I\", \"E\"],\n    2: [\"C\", \"R\", \"S\", \"T\"],\n    3: [\"L\", \"M\", \"N\", \"U\"],\n    5: [\"B\", \"D\", \"F\", \"P\", \"V\"],\n    8: [\"G\", \"H\", \"Z\"],\n    10: [\"Q\"]\n  },\n  HU: {\n    displayName: \"magyar\",\n    digraphs: [\n      [\"S\", \"Z\"],\n      [\"G\", \"Y\"],\n      [\"N\", \"Y\"],\n      [\"C\", \"S\"],\n      [\"L\", \"Y\"],\n      [\"Z\", \"S\"],\n      [\"T\", \"Y\"]\n    ],\n    0: [\" \"],\n    1: [\"A\", \"E\", \"K\", \"T\", \"Á\", \"L\", \"N\", \"R\", \"I\", \"M\", \"O\", \"S\"],\n    2: [\"B\", \"D\", \"G\", \"Ó\"],\n    3: [\"É\", \"H\", \"SZ\", \"V\"],\n    4: [\"F\", \"GY\", \"J\", \"Ö\", \"P\", \"U\", \"Ü\", \"Z\"],\n    5: [\"C\", \"Í\", \"NY\"],\n    7: [\"CS\", \"Ő\", \"Ú\", \"Ű\"],\n    8: [\"LY\", \"ZS\"],\n    10: [\"TY\"]\n  },\n  PL: {\n    displayName: \"polski\",\n    0: [\" \"],\n    1: [\"A\", \"I\", \"E\", \"O\", \"N\", \"Z\", \"R\", \"S\", \"W\"],\n    2: [\"Y\", \"C\", \"D\", \"K\", \"L\", \"M\", \"P\", \"T\"],\n    3: [\"B\", \"G\", \"H\", \"J\", \"Ł\", \"U\"],\n    5: [\"Ą\", \"Ę\", \"F\", \"Ó\", \"Ś\", \"Ż\"],\n    6: [\"Ć\"],\n    7: [\"Ń\"],\n    9: [\"Ź\"],\n  },\n  PT: {\n    displayName: \"português\",\n    0: [\" \"],\n    1: [\"A\", \"E\", \"I\", \"O\", \"S\", \"U\", \"M\", \"R\", \"T\"],\n    2: [\"D\", \"L\", \"C\", \"P\"],\n    3: [\"N\", \"B\", \"Ç\"],\n    4: [\"F\", \"G\", \"H\", \"V\"],\n    5: [\"J\"],\n    6: [\"Q\"],\n    8: [\"X\", \"Z\"],\n  },\n  RU: {\n    displayName: \"русский\",\n    0: [\" \"],\n    1: [\"О\", \"А\", \"Е\", \"И\", \"Н\", \"Р\", \"С\", \"Т\", \"В\"],\n    2: [\"Д\", \"К\", \"Л\", \"П\", \"У\", \"М\"],\n    3: [\"Б\", \"Г\", \"Ь\", \"Я\", \"Ё\"],\n    4: [\"Ы\", \"Й\"],\n    5: [\"З\", \"Ж\", \"Х\", \"Ц\", \"Ч\"],\n    8: [\"Ш\", \"Э\", \"Ю\"],\n    10: [\"Ф\", \"Щ\", \"Ъ\"]\n  },\n  UA: {\n    displayName: \"українська\",\n    0: [\" \"],\n    1: [\"О\", \"А\", \"И\", \"Н\", \"В\", \"Е\", \"І\", \"Т\", \"Р\"],\n    2: [\"К\", \"С\", \"Д\", \"Л\", \"М\", \"П\"],\n    3: [\"У\"],\n    4: [\"З\", \"Я\", \"Б\", \"Г\"],\n    5: [\"Ч\", \"Х\", \"Й\", \"Ь\"],\n    6: [\"Ж\", \"Ї\", \"Ц\", \"Ш\"],\n    7: [\"Ю\"],\n    8: [\"Є\", \"Ф\", \"Щ\"],\n    10: [\"Ґ\", \"'\"]\n  }\n};\n","import {\n  SCORE_TABLE,\n  MIN_LETTER_SCORE_MULTIPLIER as MIN_SCORE_MULTIPLIER,\n  MAX_LETTER_SCORE_MULTIPLIER as MAX_SCORE_MULTIPLIER\n} from \"./scoretable\";\n\nexport default class Letter {\n  constructor(character, languageCode) {\n    if (typeof character !== \"string\" || typeof languageCode !== \"string\") {\n      throw new TypeError(\"Both arguments have to be of type 'string'\");\n    }\n    if (!SCORE_TABLE.hasOwnProperty(languageCode)) {\n      throw new RangeError(\"Unsupported language\");\n    }\n\n    this.character = character;\n    this.languageCode = languageCode;\n    this._scoreMultiplier = MIN_SCORE_MULTIPLIER;\n  }\n\n  get score() {\n    const score = Number(\n      Object.keys(SCORE_TABLE[this.languageCode]).find(key =>\n        SCORE_TABLE[this.languageCode][key].includes(\n          this.character.toUpperCase()\n        )\n      )\n    );\n    return score * this._scoreMultiplier;\n  }\n\n  set scoreMultiplier(n) {\n    if (!Number.isInteger(n)) {\n      throw new TypeError(\"Argument has to be an integer\");\n    }\n    if (n < MIN_SCORE_MULTIPLIER || n > MAX_SCORE_MULTIPLIER) {\n      throw new RangeError(\n        `Argument has to be between ${MIN_SCORE_MULTIPLIER} and ${MAX_SCORE_MULTIPLIER}`\n      );\n    }\n\n    this._scoreMultiplier = n;\n  }\n\n  get scoreMultiplier() {\n    return this._scoreMultiplier;\n  }\n}\n","import {\n  SCORE_TABLE,\n  POINTS_FOR_BINGO,\n  MINIMUM_LETTERS_FOR_BINGO,\n  WORD_SCORE_MULTIPLIERS as SCORE_MULTIPLIERS\n} from \"./scoretable\";\nimport Letter from \"./Letter\";\n\nexport default class Word {\n  constructor(input, languageCode) {\n    if (typeof input !== \"string\" || typeof languageCode !== \"string\") {\n      throw new TypeError(\"Both arguments have to be of type 'string'\");\n    }\n    if (!SCORE_TABLE.hasOwnProperty(languageCode)) {\n      throw new RangeError(\"Unsupported language\");\n    }\n\n    this.languageCode = languageCode;\n    this.letters = this.createLettersFromInput(input);\n    this.bonusesUsed = {};\n    this.isBingoUsed = false;\n  }\n\n  createLettersFromInput(input) {\n    const letters = Array.from(input.toUpperCase());\n    if (SCORE_TABLE[this.languageCode].digraphs) {\n      this.checkForDigraphs(letters);\n    }\n    return letters.map(letter => new Letter(letter, this.languageCode));\n  }\n\n  checkForDigraphs(letters) {\n    // special case for double letters (i.e. in Spanish)\n    for (let i = 0; i < letters.length; i++) {\n      for (const digraph of SCORE_TABLE[this.languageCode].digraphs) {\n        if (letters[i] === digraph[0] && letters[i + 1] === digraph[1]) {\n          letters[i] = letters[i] + letters[i + 1];\n          letters.splice(i + 1, 1);\n        }\n      }\n    }\n  }\n\n  get score() {\n    if (this.letters.length === 0) {\n      return 0;\n    }\n    if (this.isAnyLetterInvalid()) {\n      return NaN;\n    }\n    return (\n      this.letters\n        .map(element => element.score)\n        .reduce((prev, curr) => (prev += curr))\n        * this.multiplierTotal\n        + (this.isBingoUsed ? POINTS_FOR_BINGO : 0)\n    );\n  }\n\n  get multiplierTotal() {\n    let multiplierTotal = 1;\n    for (const timesUsed in this.bonusesUsed) {\n      multiplierTotal *= this.bonusesUsed[timesUsed] * SCORE_MULTIPLIERS[timesUsed];\n    }\n    return multiplierTotal;\n  }\n\n  isAnyLetterInvalid() {\n    return this.letters.some(element => !Number.isInteger(element.score));\n  }\n\n  isNextWordBonusAllowed() {\n    // there cannot ever be more word bonuses than total number of letters\n    let totalTimesBonusesUsed = 0;\n    for (const timesUsed in this.bonusesUsed) {\n      totalTimesBonusesUsed += this.bonusesUsed[timesUsed];\n    }\n    for (const letter of this.letters) {\n      if (letter.scoreMultiplier > 1) {\n        totalTimesBonusesUsed++;\n      }\n    }\n    return this.letters.length > totalTimesBonusesUsed;\n  }\n\n  addBonus(bonusType) {\n    if (this.isNextWordBonusAllowed()) {\n      if (this.bonusesUsed.hasOwnProperty(bonusType)) {\n        this.bonusesUsed[bonusType]++;\n      } else {\n        this.bonusesUsed[bonusType] = 1;\n      }\n    }\n  }\n\n  isBingoAllowed() {\n    return this.letters.length >= MINIMUM_LETTERS_FOR_BINGO;\n  }\n\n  toggleBingo() {\n    if (this.isBingoAllowed()) {\n      this.isBingoUsed = !this.isBingoUsed;\n    }\n  }\n}\n","import React from \"react\";\nimport \"./Tile.css\";\n\nfunction LetterTile({\n  index,\n  character,\n  score,\n  scoreMultiplier,\n  cycleLetterBonus\n}) {\n  function styleDiv() {\n    const style = {};\n    if (isInvalidLetter()) {\n      style.backgroundColor = \"lightgray\";\n    } else if (scoreMultiplier === 2) {\n      style.backgroundColor = \"#6cf\";\n    } else if (scoreMultiplier === 3) {\n      style.backgroundColor = \"#06f\";\n      style.color = \"white\";\n    }\n    return style;\n  }\n\n  function isInvalidLetter() {\n    return Number.isNaN(score);\n  }\n\n  function renderScore() {\n    if (isBlankTile()) {\n      return null;\n    }\n    if (isInvalidLetter()) {\n      return \"?\";\n    } \n    return score;\n  }\n\n  function isBlankTile() {\n    return character === \" \";\n  }\n\n  function isDigraph() {\n    return character.length === 2;\n  }\n\n  return (\n    <div\n      className=\"tile\"\n      style={styleDiv()}\n      onClick={() => cycleLetterBonus(index)}\n    >\n      <span\n        className={`tile__letter ${\n          isDigraph() ? \"tile__letter--double\" : null\n        }`}\n      >\n        {character.toUpperCase()}\n      </span>\n      <span className=\"tile__letter-score\">{renderScore()}</span>\n    </div>\n  );\n}\n\nLetterTile.defaultProps = {\n  character: \" \",\n  score: \"?\",\n  scoreMultiplier: 1\n};\n\nexport default LetterTile;\n","import React from \"react\";\nimport \"./Tile.css\";\n\nfunction BonusTile({\n  bonusType,\n  timesUsed,\n  handleWordBonus,\n  isNextWordBonusAllowed,\n  isBingoAllowed,\n  isBingoUsed\n}) {\n  function styleDiv() {\n    const style = {};\n    if (!isNextWordBonusAllowed && bonusType !== \"bingo\") {\n      style.backgroundColor = \"lightgray\";\n      style.cursor = \"default\";\n    } else {\n      switch (bonusType) {\n        case \"double\":\n          style.backgroundColor = \"#f9f\";\n          break;\n        case \"triple\":\n          style.backgroundColor = \"#f00\";\n          break;\n        case \"bingo\":\n          if (isBingoAllowed) {\n            style.backgroundColor = \"orange\";\n          } else {\n            style.backgroundColor = \"lightgray\";\n            style.cursor = \"default\";\n          }\n          break;\n        default:\n      }\n    }\n    return style;\n  }\n\n  function renderBonusName() {\n    switch (bonusType) {\n      case \"double\":\n        return \"DOUBLE WORD SCORE\";\n      case \"triple\":\n        return \"TRIPLE WORD SCORE\";\n      case \"bingo\":\n        return \"BINGO\";\n      default:\n        return null;\n    }\n  }\n\n  function renderBonusState() {\n    if (bonusType === \"bingo\" && isBingoUsed) {\n      return <span className=\"tile__bonus-state\">ACTIVE</span>;\n    }\n    if (timesUsed > 0) {\n      return <span className=\"tile__bonus-state\">x{timesUsed}</span>;\n    }\n    return null;\n  }\n\n  return (\n    <div\n      className=\"tile\"\n      style={styleDiv()}\n      onClick={() => handleWordBonus(bonusType)}\n    >\n      <span className=\"tile__bonus-name\">{renderBonusName()}</span>\n      {renderBonusState()}\n    </div>\n  );\n}\n\nexport default BonusTile;\n","import React, { Component } from \"react\";\nimport Word from \"../modules/Word\";\nimport { SCORE_TABLE, MIN_LETTER_SCORE_MULTIPLIER, MAX_LETTER_SCORE_MULTIPLIER } from \"../modules/scoretable\";\nimport LetterTile from \"./Tile/LetterTile\";\nimport BonusTile from \"./Tile/BonusTile\";\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {\n    input: \"\",\n    languageCode: localStorage.getItem(\"languageCode\") || \"EN\",\n    word: new Word(\"\", localStorage.getItem(\"languageCode\") || \"EN\")\n  };\n\n  handleInputChange = e => {\n    this.setState({ input: e.target.value }, () => this.updateWord());\n  };\n\n  handleLanguageChange = e => {\n    localStorage.setItem(\"languageCode\", e.target.value);\n    this.setState({ languageCode: e.target.value }, () => this.updateWord());\n  };\n\n  updateWord = () => {\n    const { input, languageCode } = this.state;\n    this.setState({ word: new Word(input, languageCode) });\n  };\n\n  cycleLetterBonus = index => {\n    const { word } = this.state;\n    const letter = word.letters[index];\n    if (letter.scoreMultiplier === MAX_LETTER_SCORE_MULTIPLIER) {\n      letter.scoreMultiplier = MIN_LETTER_SCORE_MULTIPLIER;\n    } else {\n      letter.scoreMultiplier++;\n    }\n    this.setState({ word: word });\n  };\n\n  handleWordBonus = bonusType => {\n    const { word } = this.state;\n    if (bonusType === \"bingo\") {\n      word.toggleBingo();\n    } else {\n      word.addBonus(bonusType); \n    }\n    this.setState({ word: word });\n  };\n\n  renderLetterTiles = () => {\n    const { word } = this.state;\n    return word.letters.map((letter, index) => (\n      <LetterTile\n        key={index}\n        index={index}\n        character={letter.character}\n        score={letter.score}\n        scoreMultiplier={letter.scoreMultiplier}\n        cycleLetterBonus={this.cycleLetterBonus}\n      />\n    ));\n  };\n\n  renderWordScore = () => {\n    const { word } = this.state;\n    if (Number.isNaN(word.score)) {\n      return \"At least one invalid letter\";\n    }\n    return <span data-testid=\"word-score\">{word.score}</span>;\n  };\n\n  renderLanguageOptions = () => {\n    const options = [];\n    for (const languageCode in SCORE_TABLE) {\n      options.push(\n        <option key={languageCode} value={languageCode}>\n          {SCORE_TABLE[languageCode].displayName}\n        </option>\n      );\n    }\n    return options;\n  };\n\n  render() {\n    const { input, word, languageCode } = this.state;\n\n    return (\n      <div className=\"App\">\n        Language:\n        <select\n          value={languageCode}\n          onChange={this.handleLanguageChange}\n          className=\"lang-select\"\n          data-testid=\"lang-select\"\n        >\n          {this.renderLanguageOptions()}\n        </select>\n        <input\n          type=\"search\"\n          value={input}\n          onChange={this.handleInputChange}\n          className=\"word-input\"\n          data-testid=\"word-input\"\n          placeholder=\"Type a word to start\"\n        />\n        <div>\n          <BonusTile\n            bonusType=\"double\"\n            timesUsed={word.bonusesUsed[\"double\"]}\n            handleWordBonus={this.handleWordBonus}\n            isNextWordBonusAllowed={word.isNextWordBonusAllowed()}\n          />\n          <BonusTile\n            bonusType=\"triple\"\n            timesUsed={word.bonusesUsed[\"triple\"]}\n            handleWordBonus={this.handleWordBonus}\n            isNextWordBonusAllowed={word.isNextWordBonusAllowed()}\n          />\n          <BonusTile\n            bonusType=\"bingo\"\n            handleWordBonus={this.handleWordBonus}\n            isBingoAllowed={word.isBingoAllowed()}\n            isBingoUsed={word.isBingoUsed}\n          />\n        </div>\n        <div>{this.renderLetterTiles()}</div>\n        Score: {this.renderWordScore()}\n        <p>Click on a tile to toggle its letter bonus</p>\n        <p>All bonuses get reset when user input changes</p>\n        <p>A blank tile can be entered by using the spacebar</p>\n        <p>Bingo can be activated when there are at least 7 tiles used</p>\n        <p>\n          <a href=\"https://en.wikipedia.org/wiki/Scrabble#Scoring\">\n            Scrabble scoring rules\n          </a>\n        </p>\n        <footer style={{ fontSize: \"x-small\" }}>\n          SCRABBLE® is a registered trademark and all intellectual property\n          rights are owned by their respective owners: Hasbro, Zynga, J.W. Spear\n          & Mattel, etc.\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}