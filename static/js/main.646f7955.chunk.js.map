{"version":3,"sources":["modules/scoretable.js","modules/util/language.js","modules/Letter.js","modules/util/array.js","modules/util/multigraph.js","modules/util/bonus.js","modules/Word.js","components/LangSelect.jsx","components/WordInput.jsx","components/WordScore.jsx","components/Tile/LetterTile.jsx","components/Tile/BonusTile.jsx","components/Tile/BingoTile.jsx","components/BonusTiles.jsx","components/LetterTiles.jsx","components/Instructions.jsx","components/Footer.jsx","components/App.jsx","serviceWorker.js","index.js"],"names":["WORD_SCORE_MULTIPLIERS","double","triple","SCORE_TABLE","deu","displayName","0","1","2","3","4","6","8","10","gwi","multigraphs","5","7","9","eng","spa","fra","ita","hun","pol","por","rus","ukr","checkIsLanguageDefinedInScoretable","language","scoreTable","languageCode","hasOwnProperty","isLanguageDefinedInScoretable","RangeError","Letter","character","handleErrors","TypeError","getScore","Number","Object","keys","find","key","includes","toUpperCase","_scoreMultiplier","setScoreMultiplier","n","isInteger","hasInvalidScore","Error","getScoreMultiplier","isNaN","hasMultipliedScore","this","findIndexOfSubarray","arr","subArr","i","every","element","j","length","joinSubarrayIntoSingleElement","newArr","subArrIndexAt","splice","join","isLanguageWithMultigraphs","getMultigraphsInLanguage","sort","prev","curr","checkIsBonusDefinedInScoretable","wordScoreMultipliers","bonusType","isBonusDefinedInScoretable","Word","input","letters","isAnyLetterInvalid","NaN","map","reduce","getMultiplierTotal","isBingoUsed","some","letter","multiplierTotal","bonusesUsed","bonusMultiplier","timesBonusTypeUsed","addBonus","bonus","isNextBonusAllowed","isBonusTypeUsed","totalTimesAnyBonusTypeUsed","removeBonus","toggleBingo","isBingoAllowed","createLetters","Array","from","lettersCopy","multigraph","isMultigraphFound","processMultigraphs","LangSelect","currentLanguageCode","handleLanguageChange","languages","value","onChange","className","data-testid","defaultProps","WordInput","inputValue","handleInputChange","handleInputReset","type","placeholder","onClick","WordScore","isScoreInvalid","score","invalidScoreText","LETTER_STYLE","invalidScore","backgroundColor","cursor","color","LetterTile","index","scoreMultiplier","cycleLetterBonus","isBlankTile","isDigraph","isTrigraph","spanClassName","style","tabIndex","BONUS_STYLE","notAllowed","BonusTile","timesUsed","bonusName","BonusRemoveButton","BonusState","BINGO_STYLE","BingoTile","bingoName","handleBingo","textWhenBingoUsed","BonusTiles","isGameUsingBingo","bonusTypes","LetterTiles","Instructions","href","FOOTER_STYLE","fontSize","Footer","App","state","word","e","targetValue","target","setState","POINTS_FOR_BINGO","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.646f7955.chunk.js","sourcesContent":["export const MAX_LETTER_SCORE_MULTIPLIER = 3;\nexport const POINTS_FOR_BINGO = 50; // 0 disables bingo completely\nexport const BINGO_NAME = \"Bingo\";\nexport const MINIMUM_LETTERS_FOR_BINGO = 7;\nexport const WORD_SCORE_MULTIPLIERS = {\n  double: 2,\n  triple: 3\n};\n\nexport const SCORE_TABLE = {\n  deu: {\n    displayName: \"Deutsch\",\n    0: [\" \"],\n    1: [\"E\", \"N\", \"S\", \"I\", \"R\", \"T\", \"U\", \"A\", \"D\"],\n    2: [\"H\", \"G\", \"L\", \"O\"],\n    3: [\"M\", \"B\", \"W\", \"Z\"],\n    4: [\"C\", \"F\", \"K\", \"P\"],\n    6: [\"Ä\", \"J\", \"Ü\", \"V\"],\n    8: [\"Ö\", \"X\"],\n    10: [\"Q\", \"Y\"]\n  },\n  gwi: {\n    displayName: \"Dinju Zhuh Kʼyuu\", // Gwichʼin language\n    multigraphs: [\n      [\"A\", \"I\", \"I\"],\n      [\"A\", \"Į\", \"Į\"],\n      [\"T\", \"T\", \"H\"],\n      [\"D\", \"D\", \"H\"],\n      [\"K\", \"H\", \"W\"],\n      [\"S\", \"H\", \"R\"],\n      [\"Z\", \"H\", \"R\"],\n      [\"A\", \"A\"],\n      [\"C\", \"H\"],\n      [\"E\", \"E\"],\n      [\"Ą\", \"Ą\"],\n      [\"I\", \"I\"],\n      [\"Ę\", \"Ę\"],\n      [\"Į\", \"Į\"],\n      [\"O\", \"O\"],\n      [\"Ǫ\", \"Ǫ\"],\n      [\"T\", \"H\"],\n      [\"U\", \"U\"],\n      [\"Ų\", \"Ų\"],\n      [\"T\", \"S\"],\n      [\"T\", \"R\"],\n      [\"D\", \"H\"],\n      [\"G\", \"H\"],\n      [\"K\", \"H\"],\n      [\"S\", \"H\"],\n      [\"T\", \"Ł\"],\n      [\"G\", \"W\"],\n      [\"Z\", \"H\"],\n      [\"D\", \"R\"],\n      [\"K\", \"W\"],\n      [\"D\", \"L\"],\n      [\"D\", \"Z\"]\n    ],\n    0: [\" \"],\n    1: [\"ʼ\", \"I\", \"A\", \"N\", \"T\", \"H\", \"Ą\", \"E\", \"Ę\", \"Į\", \"O\", \"Ǫ\", \"U\", \"Ų\"],\n    2: [\"AA\", \"CH\", \"EE\", \"ĄĄ\", \"II\", \"ĘĘ\", \"ĮĮ\", \"OO\", \"ǪǪ\", \"TH\", \"UU\", \"ŲŲ\"],\n    3: [\"AII\", \"AĮĮ\", \"D\", \"G\", \"K\", \"R\", \"Y\", \"S\", \"TTH\", \"W\"],\n    4: [\"TS\", \"L\", \"Ł\", \"TR\", \"DH\", \"GH\", \"KH\", \"SH\"],\n    5: [\"J\", \"TŁ\", \"V\", \"Z\"],\n    6: [\"GW\", \"ZH\", \"DR\", \"KW\"],\n    7: [\"DL\", \"DDH\", \"KHW\", \"SHR\"],\n    8: [\"DZ\"],\n    9: [\"ZHR\"],\n    10: [\"B\", \"F\", \"M\"]\n  },\n  eng: {\n    displayName: \"English\",\n    0: [\" \"],\n    1: [\"E\", \"A\", \"I\", \"O\", \"N\", \"R\", \"T\", \"L\", \"S\", \"U\"],\n    2: [\"D\", \"G\"],\n    3: [\"B\", \"C\", \"M\", \"P\"],\n    4: [\"F\", \"H\", \"V\", \"W\", \"Y\"],\n    5: [\"K\"],\n    8: [\"J\", \"X\"],\n    10: [\"Q\", \"Z\"]\n  },\n  spa: {\n    displayName: \"español\",\n    multigraphs: [\n      [\"C\", \"H\"],\n      [\"L\", \"L\"],\n      [\"R\", \"R\"]\n    ],\n    0: [\" \"],\n    1: [\"A\", \"E\", \"O\", \"I\", \"S\", \"N\", \"R\", \"U\", \"L\", \"T\"],\n    2: [\"D\", \"G\"],\n    3: [\"C\", \"B\", \"M\", \"P\"],\n    4: [\"H\", \"F\", \"V\", \"Y\"],\n    5: [\"CH\", \"Q\"],\n    8: [\"J\", \"LL\", \"Ñ\", \"RR\", \"X\"],\n    10: [\"Z\"]\n  },\n  fra: {\n    displayName: \"français\",\n    0: [\" \"],\n    1: [\"E\", \"A\", \"I\", \"N\", \"O\", \"R\", \"S\", \"T\", \"U\", \"L\"],\n    2: [\"D\", \"M\", \"G\"],\n    3: [\"B\", \"C\", \"P\"],\n    4: [\"F\", \"H\", \"V\"],\n    8: [\"J\", \"Q\"],\n    10: [\"K\", \"W\", \"X\", \"Y\", \"Z\"]\n  },\n  ita: {\n    displayName: \"italiano\",\n    0: [\" \"],\n    1: [\"O\", \"A\", \"I\", \"E\"],\n    2: [\"C\", \"R\", \"S\", \"T\"],\n    3: [\"L\", \"M\", \"N\", \"U\"],\n    5: [\"B\", \"D\", \"F\", \"P\", \"V\"],\n    8: [\"G\", \"H\", \"Z\"],\n    10: [\"Q\"]\n  },\n  hun: {\n    displayName: \"magyar\",\n    multigraphs: [\n      [\"S\", \"Z\"],\n      [\"G\", \"Y\"],\n      [\"N\", \"Y\"],\n      [\"C\", \"S\"],\n      [\"L\", \"Y\"],\n      [\"Z\", \"S\"],\n      [\"T\", \"Y\"]\n    ],\n    0: [\" \"],\n    1: [\"A\", \"E\", \"K\", \"T\", \"Á\", \"L\", \"N\", \"R\", \"I\", \"M\", \"O\", \"S\"],\n    2: [\"B\", \"D\", \"G\", \"Ó\"],\n    3: [\"É\", \"H\", \"SZ\", \"V\"],\n    4: [\"F\", \"GY\", \"J\", \"Ö\", \"P\", \"U\", \"Ü\", \"Z\"],\n    5: [\"C\", \"Í\", \"NY\"],\n    7: [\"CS\", \"Ő\", \"Ú\", \"Ű\"],\n    8: [\"LY\", \"ZS\"],\n    10: [\"TY\"]\n  },\n  pol: {\n    displayName: \"polski\",\n    0: [\" \"],\n    1: [\"A\", \"I\", \"E\", \"O\", \"N\", \"Z\", \"R\", \"S\", \"W\"],\n    2: [\"Y\", \"C\", \"D\", \"K\", \"L\", \"M\", \"P\", \"T\"],\n    3: [\"B\", \"G\", \"H\", \"J\", \"Ł\", \"U\"],\n    5: [\"Ą\", \"Ę\", \"F\", \"Ó\", \"Ś\", \"Ż\"],\n    6: [\"Ć\"],\n    7: [\"Ń\"],\n    9: [\"Ź\"]\n  },\n  por: {\n    displayName: \"português\",\n    0: [\" \"],\n    1: [\"A\", \"E\", \"I\", \"O\", \"S\", \"U\", \"M\", \"R\", \"T\"],\n    2: [\"D\", \"L\", \"C\", \"P\"],\n    3: [\"N\", \"B\", \"Ç\"],\n    4: [\"F\", \"G\", \"H\", \"V\"],\n    5: [\"J\"],\n    6: [\"Q\"],\n    8: [\"X\", \"Z\"]\n  },\n  rus: {\n    displayName: \"русский\",\n    0: [\" \"],\n    1: [\"О\", \"А\", \"Е\", \"И\", \"Н\", \"Р\", \"С\", \"Т\", \"В\"],\n    2: [\"Д\", \"К\", \"Л\", \"П\", \"У\", \"М\"],\n    3: [\"Б\", \"Г\", \"Ь\", \"Я\", \"Ё\"],\n    4: [\"Ы\", \"Й\"],\n    5: [\"З\", \"Ж\", \"Х\", \"Ц\", \"Ч\"],\n    8: [\"Ш\", \"Э\", \"Ю\"],\n    10: [\"Ф\", \"Щ\", \"Ъ\"]\n  },\n  ukr: {\n    displayName: \"українська\",\n    0: [\" \"],\n    1: [\"О\", \"А\", \"И\", \"Н\", \"В\", \"Е\", \"І\", \"Т\", \"Р\"],\n    2: [\"К\", \"С\", \"Д\", \"Л\", \"М\", \"П\"],\n    3: [\"У\"],\n    4: [\"З\", \"Я\", \"Б\", \"Г\"],\n    5: [\"Ч\", \"Х\", \"Й\", \"Ь\"],\n    6: [\"Ж\", \"Ї\", \"Ц\", \"Ш\"],\n    7: [\"Ю\"],\n    8: [\"Є\", \"Ф\", \"Щ\"],\n    10: [\"Ґ\", \"'\"]\n  }\n};\n","export function checkIsLanguageDefinedInScoretable(language) {\n  if (!isLanguageDefinedInScoretable(language)) {\n    throw new RangeError(\"Unsupported language\");\n  }\n}\n\nexport function isLanguageDefinedInScoretable({ scoreTable, languageCode }) {\n  return scoreTable.hasOwnProperty(languageCode);\n}\n","import { SCORE_TABLE, MAX_LETTER_SCORE_MULTIPLIER } from \"./scoretable\";\nimport { checkIsLanguageDefinedInScoretable } from \"./util/language\";\n\nexport default class Letter {\n  constructor(character, languageCode) {\n    this.handleErrors(character, languageCode);\n    this.character = character;\n    this.languageCode = languageCode;\n    this._scoreMultiplier = 1;\n  }\n\n  handleErrors = (character, languageCode) => {\n    if (typeof character !== \"string\" || typeof languageCode !== \"string\") {\n      throw new TypeError(\"Both arguments have to be of type 'string'\");\n    }\n    checkIsLanguageDefinedInScoretable({\n      scoreTable: SCORE_TABLE,\n      languageCode\n    });\n  };\n\n  getScore = () => {\n    const score = Number(\n      Object.keys(SCORE_TABLE[this.languageCode]).find(key =>\n        SCORE_TABLE[this.languageCode][key].includes(\n          this.character.toUpperCase()\n        )\n      )\n    );\n    return score * this._scoreMultiplier;\n  };\n\n  setScoreMultiplier = n => {\n    if (!Number.isInteger(n)) {\n      throw new TypeError(\"Argument has to be an integer\");\n    }\n    if (n < 1 || n > MAX_LETTER_SCORE_MULTIPLIER) {\n      throw new RangeError(\n        `Argument has to be between 1 and ${MAX_LETTER_SCORE_MULTIPLIER}`\n      );\n    }\n    if (this.hasInvalidScore()) {\n      throw new Error(\"Can't set multiplier to a letter with invalid score\");\n    }\n    this._scoreMultiplier = n;\n  };\n\n  getScoreMultiplier = () => {\n    return this._scoreMultiplier;\n  };\n\n  hasInvalidScore = () => {\n    return Number.isNaN(this.getScore());\n  };\n\n  hasMultipliedScore = () => {\n    return this._scoreMultiplier !== 1;\n  };\n}\n","export function sortArrayByLengthDescending(arr) {\n  return [...arr].sort((prev, curr) => curr.length - prev.length);\n}\n\nexport function findIndexOfSubarray(arr, subArr) {\n  for (let i = 0; i < 1 + (arr.length - subArr.length); ++i) {\n    if (subArr.every((element, j) => element === arr[i + j])) {\n      return i;\n    }\n  }\n  return -1;\n}\n\nexport function joinSubarrayIntoSingleElement(arr, subArr) {\n  const newArr = [...arr];\n  const subArrIndexAt = findIndexOfSubarray(arr, subArr);\n  if (subArrIndexAt !== -1) {\n    newArr.splice(subArrIndexAt, subArr.length, subArr.join(\"\"));\n  }\n  return newArr;\n}\n","import {\n  sortArrayByLengthDescending,\n  findIndexOfSubarray,\n  joinSubarrayIntoSingleElement\n} from \"./array\";\nimport { checkIsLanguageDefinedInScoretable } from \"./language\";\n\nexport function isLanguageWithMultigraphs({ scoreTable, languageCode }) {\n  checkIsLanguageDefinedInScoretable({ scoreTable, languageCode });\n  return scoreTable[languageCode].hasOwnProperty(\"multigraphs\");\n}\n\nexport function getMultigraphsInLanguage({ scoreTable, languageCode }) {\n  if (isLanguageWithMultigraphs({ scoreTable, languageCode })) {\n    return sortArrayByLengthDescending([\n      ...scoreTable[languageCode].multigraphs\n    ]);\n  }\n  return [];\n}\n\nexport function processMultigraphs(letters, multigraphs) {\n  let lettersCopy = [...letters];\n\n  for (const multigraph of multigraphs) {\n    let isMultigraphFound = findIndexOfSubarray(lettersCopy, multigraph) !== -1;\n    while (isMultigraphFound) {\n      lettersCopy = joinSubarrayIntoSingleElement(lettersCopy, multigraph);\n      isMultigraphFound = findIndexOfSubarray(lettersCopy, multigraph) !== -1;\n    }\n  }\n\n  return lettersCopy;\n}\n","export function checkIsBonusDefinedInScoretable({\n  wordScoreMultipliers,\n  bonusType\n}) {\n  if (!isBonusDefinedInScoretable({ wordScoreMultipliers, bonusType })) {\n    throw new RangeError(`No '${bonusType}' bonus type in the score table`);\n  }\n}\n\nexport function isBonusDefinedInScoretable({\n  wordScoreMultipliers,\n  bonusType\n}) {\n  return wordScoreMultipliers.hasOwnProperty(bonusType);\n}\n","import {\n  SCORE_TABLE,\n  POINTS_FOR_BINGO,\n  MINIMUM_LETTERS_FOR_BINGO,\n  WORD_SCORE_MULTIPLIERS\n} from \"./scoretable\";\nimport Letter from \"./Letter\";\nimport {\n  isLanguageWithMultigraphs,\n  getMultigraphsInLanguage,\n  processMultigraphs\n} from \"./util/multigraph\";\nimport { checkIsBonusDefinedInScoretable } from \"./util/bonus\";\nimport { checkIsLanguageDefinedInScoretable } from \"./util/language\";\n\nexport default class Word {\n  constructor(input, languageCode) {\n    this.handleErrors(input, languageCode);\n    this.languageCode = languageCode;\n    this.letters = Word.createLetters(input, languageCode);\n    this.bonusesUsed = {};\n    this.isBingoUsed = false;\n  }\n\n  handleErrors = (input, languageCode) => {\n    if (typeof input !== \"string\" || typeof languageCode !== \"string\") {\n      throw new TypeError(\"Both arguments have to be of type 'string'\");\n    }\n    checkIsLanguageDefinedInScoretable({\n      scoreTable: SCORE_TABLE,\n      languageCode\n    });\n  };\n\n  static createLetters(input, languageCode) {\n    let letters = Array.from(input.toUpperCase());\n    const language = {\n      scoreTable: SCORE_TABLE,\n      languageCode\n    };\n    if (isLanguageWithMultigraphs(language)) {\n      const multigraphs = getMultigraphsInLanguage(language);\n      letters = processMultigraphs(letters, multigraphs);\n    }\n    return letters.map(letter => new Letter(letter, languageCode));\n  }\n\n  getScore = () => {\n    if (this.letters.length === 0) {\n      return 0;\n    }\n    if (this.isAnyLetterInvalid()) {\n      return NaN;\n    }\n    return (\n      this.letters\n        .map(element => element.getScore())\n        .reduce((prev, curr) => (prev += curr))\n        * this.getMultiplierTotal()\n        + (this.isBingoUsed ? POINTS_FOR_BINGO : 0)\n    );\n  };\n\n  isAnyLetterInvalid = () => {\n    return this.letters.some(letter => !Number.isInteger(letter.getScore()));\n  };\n\n  getMultiplierTotal = () => {\n    let multiplierTotal = 1;\n    for (const bonusType in this.bonusesUsed) {\n      const bonusMultiplier = WORD_SCORE_MULTIPLIERS[bonusType];\n      for (let i = 0; i < this.timesBonusTypeUsed(bonusType); i++) {\n        multiplierTotal *= bonusMultiplier;\n      }\n    }\n    return multiplierTotal;\n  };\n\n  timesBonusTypeUsed = bonusType => {\n    return this.bonusesUsed[bonusType];\n  };\n\n  addBonus = (bonusType, n = 1) => {\n    const bonus = {\n      wordScoreMultipliers: WORD_SCORE_MULTIPLIERS,\n      bonusType\n    };\n    checkIsBonusDefinedInScoretable(bonus);\n    if (n < 0) {\n      throw new RangeError(\"Cannot add bonus a negative number of times\");\n    }\n    while (n > 0) {\n      if (this.isNextBonusAllowed()) {\n        if (this.isBonusTypeUsed(bonusType)) {\n          this.bonusesUsed[bonusType]++;\n        } else {\n          this.bonusesUsed[bonusType] = 1;\n        }\n      }\n      n--;\n    }\n  };\n\n  isBonusTypeUsed = bonusType => {\n    return this.bonusesUsed.hasOwnProperty(bonusType);\n  };\n\n  isNextBonusAllowed = () => {\n    // there cannot ever be more word+letter bonuses than total number of letters\n    let totalTimesAnyBonusTypeUsed = 0;\n    for (const bonusType in this.bonusesUsed) {\n      totalTimesAnyBonusTypeUsed += this.timesBonusTypeUsed(bonusType);\n    }\n    for (const letter of this.letters) {\n      if (letter.hasMultipliedScore()) {\n        totalTimesAnyBonusTypeUsed++;\n      }\n    }\n    return this.letters.length > totalTimesAnyBonusTypeUsed;\n  };\n\n  removeBonus = (bonusType, n = 1) => {\n    const bonus = {\n      wordScoreMultipliers: WORD_SCORE_MULTIPLIERS,\n      bonusType\n    };\n    checkIsBonusDefinedInScoretable(bonus);\n    if (n < 0) {\n      throw new RangeError(\"Cannot remove bonus a negative number of times\");\n    }\n    if (this.isBonusTypeUsed(bonusType)) {\n      while (n > 0) {\n        if (this.timesBonusTypeUsed(bonusType) === 1) {\n          delete this.bonusesUsed[bonusType];\n        } else if (this.timesBonusTypeUsed(bonusType) > 1) {\n          this.bonusesUsed[bonusType]--;\n        }\n        n--;\n      }\n    }\n  };\n\n  toggleBingo = () => {\n    if (this.isBingoAllowed()) {\n      this.isBingoUsed = !this.isBingoUsed;\n    }\n  };\n\n  isBingoAllowed = () => {\n    const isGameUsingBingo = POINTS_FOR_BINGO > 0;\n    if (isGameUsingBingo) {\n      return this.letters.length >= MINIMUM_LETTERS_FOR_BINGO;\n    }\n    return false;\n  };\n\n  hasInvalidScore = () => {\n    return Number.isNaN(this.getScore());\n  };\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { SCORE_TABLE } from \"../modules/scoretable\";\n\nexport default function LangSelect({\n  currentLanguageCode,\n  handleLanguageChange\n}) {\n  const languages = Array.from(Object.keys(SCORE_TABLE));\n\n  return (\n    <div>\n      Language:\n      <select\n        value={currentLanguageCode}\n        onChange={handleLanguageChange}\n        className=\"lang-select\"\n        data-testid=\"lang-select\"\n      >\n        {languages.map(languageCode => {\n          return (\n            <option key={languageCode} value={languageCode}>\n              {SCORE_TABLE[languageCode].displayName}\n            </option>\n          );\n        })}\n      </select>\n    </div>\n  );\n}\n\nLangSelect.propTypes = {\n  currentLanguageCode: PropTypes.string,\n  handleLanguageChange: PropTypes.func\n};\n\nLangSelect.defaultProps = {\n  currentLanguageCode: \"eng\",\n  handleLanguageChange: () => {}\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst RESET_BTN_TEXT = \"Reset word\";\n\nexport default function WordInput({\n  inputValue,\n  handleInputChange,\n  handleInputReset\n}) {\n  return (\n    <div>\n      <input\n        type=\"text\"\n        value={inputValue}\n        onChange={handleInputChange}\n        className=\"word-input\"\n        data-testid=\"word-input\"\n        placeholder=\"Type a word to start\"\n      />\n      {inputValue && (\n        <button onClick={handleInputReset} className=\"word-reset\">\n          {RESET_BTN_TEXT}\n        </button>\n      )}\n    </div>\n  );\n}\n\nWordInput.propTypes = {\n  inputValue: PropTypes.string,\n  handleInputChange: PropTypes.func\n};\n\nWordInput.defaultProps = {\n  inputValue: \"\",\n  handleInputChange: () => {}\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nexport default function WordScore({ isScoreInvalid, score, invalidScoreText }) {\n  return (\n    <span className=\"word-score\">\n      Word score:{\" \"}\n      {isScoreInvalid ? (\n        invalidScoreText\n      ) : (\n        <span data-testid=\"word-score-value\">{score}</span>\n      )}\n    </span>\n  );\n}\n\nWordScore.propTypes = {\n  isScoreInvalid: PropTypes.bool,\n  score: PropTypes.number,\n  invalidScoreText: PropTypes.string\n};\n\nWordScore.defaultProps = {\n  isScoreInvalid: false,\n  score: 0,\n  invalidScoreText: \"At least one invalid letter\"\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst LETTER_STYLE = {\n  invalidScore: { backgroundColor: \"lightgray\", cursor: \"default\" },\n  1: { backgroundColor: \"antiquewhite\" },\n  2: { backgroundColor: \"#6cf\" },\n  3: { backgroundColor: \"#06f\", color: \"white\" }\n};\n\nexport default function LetterTile({\n  index,\n  character,\n  score,\n  isScoreInvalid,\n  scoreMultiplier,\n  cycleLetterBonus\n}) {\n  function styleDiv() {\n    if (isScoreInvalid) {\n      return LETTER_STYLE.invalidScore;\n    }\n    return LETTER_STYLE[scoreMultiplier];\n  }\n\n  function renderScore() {\n    if (isBlankTile) {\n      return null;\n    }\n    if (isScoreInvalid) {\n      return \"?\";\n    }\n    return score;\n  }\n\n  const isBlankTile = character === \" \";\n\n  const isDigraph = character.length === 2;\n\n  const isTrigraph = character.length === 3;\n\n  const spanClassName = `tile__letter ${\n    isDigraph ? \"tile__letter--double\" : null\n  } ${isTrigraph ? \"tile__letter--triple\" : null}`;\n\n  return (\n    <div\n      className=\"tile\"\n      style={styleDiv()}\n      onClick={() => cycleLetterBonus(index)}\n      tabIndex=\"0\"\n    >\n      <span className={spanClassName}>{character.toUpperCase()}</span>\n      <span className=\"tile__letter-score\">{renderScore()}</span>\n    </div>\n  );\n}\n\nLetterTile.propTypes = {\n  index: PropTypes.number,\n  character: PropTypes.string,\n  score: PropTypes.number,\n  isScoreInvalid: PropTypes.bool,\n  scoreMultiplier: PropTypes.number,\n  cycleLetterBonus: PropTypes.func\n};\n\nLetterTile.defaultProps = {\n  index: 0,\n  character: \" \",\n  score: null,\n  isScoreInvalid: false,\n  scoreMultiplier: 1,\n  cycleLetterBonus: () => {}\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst BONUS_STYLE = {\n  notAllowed: {\n    backgroundColor: \"lightgray\",\n    cursor: \"default\"\n  },\n  double: {\n    backgroundColor: \"#f9f\"\n  },\n  triple: {\n    backgroundColor: \"#f00\"\n  }\n};\n\nexport default function BonusTile({\n  bonusType,\n  timesUsed,\n  addBonus,\n  removeBonus,\n  isNextBonusAllowed\n}) {\n  function styleDiv() {\n    if (!isNextBonusAllowed) {\n      return BONUS_STYLE.notAllowed;\n    }\n    return BONUS_STYLE[bonusType];\n  }\n\n  const bonusName = `${bonusType.toUpperCase()} WORD SCORE`;\n\n  return (\n    <>\n      <BonusRemoveButton\n        bonusType={bonusType}\n        timesUsed={timesUsed}\n        removeBonus={removeBonus}\n      />\n      <div\n        className=\"tile\"\n        style={styleDiv()}\n        onClick={() => addBonus(bonusType)}\n        tabIndex=\"0\"\n      >\n        <span className=\"tile__bonus-name\">{bonusName}</span>\n        <BonusState timesUsed={timesUsed} />\n      </div>\n    </>\n  );\n}\n\nBonusTile.propTypes = {\n  bonusType: PropTypes.string,\n  timesUsed: PropTypes.number,\n  addBonus: PropTypes.func,\n  removeBonus: PropTypes.func,\n  isNextBonusAllowed: PropTypes.bool\n};\n\nBonusTile.defaultProps = {\n  bonusType: \"double\",\n  timesUsed: 0,\n  addBonus: () => {},\n  removeBonus: () => {},\n  isNextBonusAllowed: true\n};\n\nfunction BonusRemoveButton({ bonusType, timesUsed, removeBonus }) {\n  if (timesUsed > 0) {\n    return (\n      <button\n        className=\"tile__bonus-remove\"\n        onClick={() => removeBonus(bonusType)}\n      >\n        –\n      </button>\n    );\n  }\n  return null;\n}\n\nBonusRemoveButton.propTypes = {\n  bonusType: PropTypes.string,\n  timesUsed: PropTypes.number,\n  removeBonus: PropTypes.func\n};\n\nBonusRemoveButton.defaultProps = {\n  bonusType: \"double\",\n  timesUsed: 0,\n  removeBonus: () => {}\n};\n\nfunction BonusState({ timesUsed }) {\n  if (timesUsed > 0) {\n    return <span className=\"tile__bonus-state\">x{timesUsed}</span>;\n  }\n  return null;\n}\n\nBonusState.propTypes = {\n  timesUsed: PropTypes.number\n};\n\nBonusState.defaultProps = {\n  timesUsed: 0\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst BINGO_STYLE = {\n  allowed: { backgroundColor: \"orange\" },\n  notAllowed: { backgroundColor: \"lightgray\", cursor: \"default\" }\n};\n\nexport default function BingoTile({\n  bingoName,\n  handleBingo,\n  isBingoAllowed,\n  isBingoUsed,\n  textWhenBingoUsed\n}) {\n  function styleDiv() {\n    const { allowed, notAllowed } = BINGO_STYLE;\n    if (isBingoAllowed) {\n      return allowed;\n    }\n    return notAllowed;\n  }\n\n  return (\n    <div className=\"tile\" style={styleDiv()} onClick={handleBingo} tabIndex=\"0\">\n      <span className=\"tile__bonus-name\">{bingoName.toUpperCase()}</span>\n      {isBingoUsed ?? (\n        <span className=\"tile__bonus-state\">{textWhenBingoUsed}</span>\n      )}\n    </div>\n  );\n}\n\nBingoTile.propTypes = {\n  bingoName: PropTypes.string,\n  handleBingo: PropTypes.func,\n  isBingoAllowed: PropTypes.bool,\n  isBingoUsed: PropTypes.bool,\n  textWhenBingoUsed: PropTypes.string\n};\n\nBingoTile.defaultProps = {\n  bingoName: \"Bingo\",\n  handleBingo: () => {},\n  isBingoAllowed: false,\n  isBingoUsed: false,\n  textWhenBingoUsed: \"ACTIVE\"\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { BonusTile, BingoTile } from \"./Tile/Tile\";\nimport { BINGO_NAME, WORD_SCORE_MULTIPLIERS } from \"../modules/scoretable\";\n\nexport default function BonusTiles({\n  addBonus,\n  removeBonus,\n  bonusesUsed,\n  isNextBonusAllowed,\n  isGameUsingBingo,\n  handleBingo,\n  isBingoAllowed,\n  isBingoUsed\n}) {\n  const bonusTypes = Array.from(Object.keys(WORD_SCORE_MULTIPLIERS));\n\n  return (\n    <div>\n      {bonusTypes.map(bonusType => {\n        return (\n          <BonusTile\n            key={bonusType}\n            bonusType={bonusType}\n            timesUsed={bonusesUsed[bonusType]}\n            addBonus={addBonus}\n            removeBonus={removeBonus}\n            isNextBonusAllowed={isNextBonusAllowed}\n          />\n        );\n      })}\n      {isGameUsingBingo && (\n        <BingoTile\n          key={BINGO_NAME}\n          bingoName={BINGO_NAME}\n          handleBingo={handleBingo}\n          isBingoAllowed={isBingoAllowed}\n          isBingoUsed={isBingoUsed}\n        />\n      )}\n    </div>\n  );\n}\n\nBonusTiles.propTypes = {\n  addBonus: PropTypes.func,\n  removeBonus: PropTypes.func,\n  bonusesUsed: PropTypes.object,\n  isNextBonusAllowed: PropTypes.bool,\n  isGameUsingBingo: PropTypes.bool,\n  handleBingo: PropTypes.func,\n  isBingoAllowed: PropTypes.bool,\n  isBingoUsed: PropTypes.bool\n};\n\nBonusTiles.defaultProps = {\n  addBonus: () => {},\n  removeBonus: () => {},\n  bonusesUsed: {},\n  isNextBonusAllowed: true,\n  isGameUsingBingo: true,\n  handleBingo: () => {},\n  isBingoAllowed: false,\n  isBingoUsed: false\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { LetterTile } from \"./Tile/Tile\";\n\nexport default function LetterTiles({ letters, cycleLetterBonus }) {\n  return (\n    <div>\n      {letters.map(\n        (\n          { character, getScore, getScoreMultiplier, hasInvalidScore },\n          index\n        ) => (\n          <LetterTile\n            key={index}\n            index={index}\n            character={character}\n            score={getScore()}\n            isScoreInvalid={hasInvalidScore()}\n            scoreMultiplier={getScoreMultiplier()}\n            cycleLetterBonus={cycleLetterBonus}\n          />\n        )\n      )}\n    </div>\n  );\n}\n\nLetterTiles.propTypes = {\n  letters: PropTypes.array,\n  cycleLetterBonus: PropTypes.func\n};\n\nLetterTiles.defaultProps = {\n  letters: [],\n  cycleLetterBonus: () => {}\n};\n","import React from \"react\";\nimport {\n  BINGO_NAME,\n  POINTS_FOR_BINGO,\n  MINIMUM_LETTERS_FOR_BINGO\n} from \"../modules/scoretable\";\n\nconst isGameUsingBingo = POINTS_FOR_BINGO > 0;\n\nexport default function Instructions() {\n  return (\n    <div>\n      <p>Click on a tile to toggle its letter bonus</p>\n      <p>A blank tile can be entered by using the spacebar</p>\n      <p>All bonuses get reset when user input or language changes</p>\n      {isGameUsingBingo && (\n        <p>\n          {BINGO_NAME} can be activated when there are at least{\" \"}\n          {MINIMUM_LETTERS_FOR_BINGO} tiles used\n        </p>\n      )}\n      <p>\n        There cannot ever be more word + letter bonuses than letters in a word\n      </p>\n      <p>\n        <a href=\"https://en.wikipedia.org/wiki/Scrabble#Scoring\">\n          Scrabble scoring rules\n        </a>\n      </p>\n    </div>\n  );\n}\n","import React from \"react\";\n\nconst FOOTER_STYLE = {\n  fontSize: \"0.625rem\"\n};\n\nexport default function Footer() {\n  return (\n    <footer style={FOOTER_STYLE}>\n      SCRABBLE® is a registered trademark and all intellectual property rights\n      are owned by their respective owners: Hasbro, Zynga, J.W. Spear & Mattel,\n      etc.\n    </footer>\n  );\n}\n","import React, { Component } from \"react\";\nimport Word from \"../modules/Word\";\nimport {\n  MAX_LETTER_SCORE_MULTIPLIER,\n  POINTS_FOR_BINGO\n} from \"../modules/scoretable\";\nimport LangSelect from \"./LangSelect\";\nimport WordInput from \"./WordInput\";\nimport WordScore from \"./WordScore\";\nimport BonusTiles from \"./BonusTiles\";\nimport LetterTiles from \"./LetterTiles\";\nimport Instructions from \"./Instructions\";\nimport Footer from \"./Footer\";\nimport \"./App.css\";\n\nconst DEFAULT_LANGUAGE = \"eng\";\nconst isGameUsingBingo = POINTS_FOR_BINGO > 0;\n\nexport default class App extends Component {\n  state = {\n    inputValue: \"\",\n    languageCode: DEFAULT_LANGUAGE,\n    word: new Word(\"\", DEFAULT_LANGUAGE)\n  };\n\n  handleInputChange = e => {\n    const targetValue = e.target.value;\n    this.setState(state => {\n      return {\n        inputValue: targetValue,\n        word: new Word(targetValue, state.languageCode)\n      };\n    });\n  };\n\n  handleInputReset = () => {\n    this.setState(state => {\n      return {\n        inputValue: \"\",\n        word: new Word(\"\", state.languageCode)\n      };\n    });\n  };\n\n  handleLanguageChange = e => {\n    const targetValue = e.target.value;\n    this.setState(state => {\n      return {\n        languageCode: targetValue,\n        word: new Word(state.inputValue, targetValue)\n      };\n    });\n  };\n\n  cycleLetterBonus = index => {\n    const { word } = this.state;\n    const letter = word.letters[index];\n    if (letter.hasInvalidScore()) {\n      return;\n    }\n    if (word.isNextBonusAllowed() || letter.hasMultipliedScore()) {\n      this.setState(state => {\n        const word = { ...state.word };\n        const letter = word.letters[index];\n        if (letter.getScoreMultiplier() === MAX_LETTER_SCORE_MULTIPLIER) {\n          letter.setScoreMultiplier(1);\n        } else {\n          letter.setScoreMultiplier(letter.getScoreMultiplier() + 1);\n        }\n        return { word };\n      });\n    }\n  };\n\n  addBonus = bonusType => {\n    this.setState(state => {\n      const word = { ...state.word };\n      word.addBonus(bonusType);\n      return { word };\n    });\n  };\n\n  removeBonus = bonusType => {\n    this.setState(state => {\n      const word = { ...state.word };\n      word.removeBonus(bonusType);\n      return { word };\n    });\n  };\n\n  handleBingo = () => {\n    if (isGameUsingBingo) {\n      this.setState(state => {\n        const word = { ...state.word };\n        word.toggleBingo();\n        return { word };\n      });\n    }\n  };\n\n  render() {\n    const { inputValue, languageCode, word } = this.state;\n    const {\n      handleLanguageChange,\n      handleInputChange,\n      handleInputReset,\n      addBonus,\n      removeBonus,\n      handleBingo,\n      cycleLetterBonus\n    } = this;\n\n    return (\n      <div className=\"App\">\n        <LangSelect\n          currentLanguageCode={languageCode}\n          handleLanguageChange={handleLanguageChange}\n        />\n        <WordInput\n          inputValue={inputValue}\n          handleInputChange={handleInputChange}\n          handleInputReset={handleInputReset}\n        />\n        <BonusTiles\n          addBonus={addBonus}\n          removeBonus={removeBonus}\n          bonusesUsed={word.bonusesUsed}\n          isNextBonusAllowed={word.isNextBonusAllowed()}\n          isGameUsingBingo={isGameUsingBingo}\n          handleBingo={handleBingo}\n          isBingoAllowed={word.isBingoAllowed()}\n          isBingoUsed={word.isBingoUsed}\n        />\n        <LetterTiles\n          letters={word.letters}\n          cycleLetterBonus={cycleLetterBonus}\n        />\n        <WordScore\n          isScoreInvalid={word.hasInvalidScore()}\n          score={word.getScore()}\n        />\n        <Instructions />\n        <Footer />\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}